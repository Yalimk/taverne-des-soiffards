{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\virtuoworks\\\\Desktop\\\\taverne-des-soiffards\\\\front-end\\\\src\\\\user\\\\EditProfile.jsx\";\n// Navite modules import\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\"; // Personal modules import\n\nimport { isLoggedIn } from \"../auth/index\";\nimport { read, updateUser } from './apiUser';\n\nclass EditProfile extends Component {\n  constructor() {\n    super();\n\n    this.init = async userId => {\n      let token;\n\n      try {\n        token = isLoggedIn().token;\n      } catch (error) {\n        console.error(`Couldn't retrieve token because of error: ${error}.`);\n      }\n\n      if (token) {\n        let data;\n\n        try {\n          data = await read(userId, token);\n        } catch (error) {\n          console.error(`Couldn't retrieve data because of error: ${error}.`);\n        }\n\n        if (data) {\n          try {\n            if (data.error) {\n              try {\n                this.setState = {\n                  redirectionProfile: true\n                };\n              } catch (error) {\n                console.error(`Couldn't set state of redirectionProfile.`);\n              }\n            } else {\n              try {\n                this.setState({\n                  id: data._id,\n                  pseudo: data.pseudo,\n                  email: data.email,\n                  error: \"\"\n                });\n              } catch (error) {\n                console.error(`Couldn't set state or of user.`);\n              }\n            }\n          } catch (error) {\n            console.error(`No error property inside data object was found because of error: ${error}.`);\n          }\n        } else {\n          console.error(`No data object was found.`);\n        }\n      } else {\n        console.error(`Token inside init method is ${typeof token}.`);\n      }\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.updateSubmit = async event => {\n      event.preventDefault();\n      const {\n        pseudo,\n        email,\n        password\n      } = this.state;\n      const user = {\n        pseudo,\n        email,\n        password\n      };\n      const userId = this.props.match.params.userId;\n      const token = isLoggedIn().token; // console.info(`token dans updateSubmit: ${token}`);\n      // console.info(`userId dans updateSubmit: ${userId}`);\n\n      let response;\n\n      try {\n        response = await updateUser(userId, token, user);\n      } catch (error) {\n        console.error(`Couldn't get a response, type of response is ${typeof response}.`);\n      }\n\n      if (response.error !== \"\") {\n        try {\n          this.setState({\n            error: response.error\n          });\n        } catch (error) {\n          console.error(`Couldn't change state because of error: ${error}.`);\n        }\n      } else {\n        try {\n          this.setState({\n            redirectionProfile: true\n          });\n        } catch (error) {\n          console.error(`Couldn't change state because of error: ${error}.`);\n        }\n      }\n    };\n\n    this.updateForm = (pseudo, email, password) => {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Name\",\n            className: \"text-muted\",\n            children: \"Pseudo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange(\"pseudo\"),\n            type: \"text\",\n            className: \"form-control\",\n            value: pseudo,\n            placeholder: \"Le nom qui sera visible par les autres utilisateurs de la Taverne\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Email\",\n            className: \"text-muted\",\n            children: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange(\"email\"),\n            type: \"email\",\n            className: \"form-control\",\n            value: email,\n            placeholder: \"Votre e-mail de contact (example : guy-tard@gmail.com)\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            id: \"emailHelp\",\n            className: \"form-text text-muted\",\n            children: \"Votre e-mail ne sera partag\\xE9 avec aucune tierse partie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Password\",\n            className: \"text-muted\",\n            children: \"Mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange(\"password\"),\n            type: \"password\",\n            className: \"form-control\",\n            value: password,\n            placeholder: \"Ne communiquez jamais votre mot de passe \\xE0 qui que ce soit.\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.updateSubmit,\n          type: \"submit\",\n          className: \"btn btn-raised btn-primary\",\n          children: \"Modifier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      id: \"\",\n      pseudo: \"\",\n      email: \"\",\n      password: \"\",\n      redirectionProfile: false,\n      error: \"\"\n    };\n  }\n\n  render() {\n    const {\n      id,\n      pseudo,\n      email,\n      password,\n      redirectionProfile\n    } = this.state;\n\n    if (redirectionProfile) {\n      /*#__PURE__*/\n      _jsxDEV(Redirect, {\n        to: `/user/${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-5 mb-5\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), this.updateForm(pseudo, email, password)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidMount() {\n    try {\n      const userId = this.props.match.params.userId;\n\n      if (userId) {\n        this.init(userId);\n      } else {\n        console.error(\"No userId found.\");\n      }\n    } catch (error) {\n      console.error(\"Something went wrong with componentDidMount method.\");\n    }\n  }\n\n}\n\nexport default EditProfile;","map":{"version":3,"sources":["C:/Users/virtuoworks/Desktop/taverne-des-soiffards/front-end/src/user/EditProfile.jsx"],"names":["React","Component","Redirect","isLoggedIn","read","updateUser","EditProfile","constructor","init","userId","token","error","console","data","setState","redirectionProfile","id","_id","pseudo","email","handleChange","name","event","target","value","updateSubmit","preventDefault","password","state","user","props","match","params","response","updateForm","render","componentDidMount"],"mappings":"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","sourcesContent":["// Navite modules import\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n// Personal modules import\r\nimport { isLoggedIn } from \"../auth/index\";\r\nimport { read, updateUser } from './apiUser';\r\n\r\nclass EditProfile extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      id: \"\",\r\n      pseudo: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      redirectionProfile: false,\r\n      error: \"\",\r\n    }\r\n  }\r\n\r\n  init = async (userId) => {\r\n    let token;\r\n    try {\r\n      token = isLoggedIn().token;\r\n    } catch (error) {\r\n      console.error(`Couldn't retrieve token because of error: ${error}.`);\r\n    }\r\n    if (token) {\r\n      let data;\r\n      try {\r\n        data = await read(userId, token);\r\n      } catch (error) {\r\n        console.error(`Couldn't retrieve data because of error: ${error}.`);\r\n      }\r\n      if (data) {\r\n        try {\r\n          if (data.error) {\r\n            try {\r\n              this.setState = {\r\n                redirectionProfile: true,\r\n              };\r\n            } catch (error) {\r\n              console.error(`Couldn't set state of redirectionProfile.`);\r\n            }\r\n          } else {\r\n            try {\r\n              this.setState({\r\n                id: data._id,\r\n                pseudo: data.pseudo,\r\n                email: data.email,\r\n                error: \"\",\r\n              });\r\n            } catch (error) {\r\n              console.error(`Couldn't set state or of user.`);\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\r\n            `No error property inside data object was found because of error: ${error}.`\r\n          );\r\n        }\r\n      } else {\r\n        console.error(`No data object was found.`);\r\n      }\r\n    } else {\r\n      console.error(`Token inside init method is ${typeof token}.`);\r\n    }\r\n  };\r\n\r\n  handleChange = (name) => (event) => {\r\n    this.setState({\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  updateSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { pseudo, email, password } = this.state;\r\n    const user = { pseudo, email, password };\r\n    const userId = this.props.match.params.userId;\r\n    const token = isLoggedIn().token;\r\n    // console.info(`token dans updateSubmit: ${token}`);\r\n    // console.info(`userId dans updateSubmit: ${userId}`);\r\n    let response;\r\n    try {\r\n      response = await updateUser(userId, token, user);\r\n    } catch (error) {\r\n      console.error(\r\n        `Couldn't get a response, type of response is ${typeof response}.`\r\n      );\r\n    }\r\n    if (response.error !== \"\") {\r\n      try {\r\n        this.setState({\r\n          error: response.error,\r\n        });\r\n      } catch (error) {\r\n        console.error(`Couldn't change state because of error: ${error}.`);\r\n      }\r\n    } else {\r\n      try {\r\n        this.setState({\r\n          redirectionProfile: true,\r\n        });\r\n      } catch (error) {\r\n        console.error(`Couldn't change state because of error: ${error}.`);\r\n      }\r\n    }\r\n  };\r\n\r\n  updateForm = (pseudo, email, password) => {\r\n    return (\r\n      <form action=\"\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Name\" className=\"text-muted\">\r\n            Pseudo\r\n          </label>\r\n          <input\r\n            onChange={this.handleChange(\"pseudo\")}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={pseudo}\r\n            placeholder=\"Le nom qui sera visible par les autres utilisateurs de la Taverne\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Email\" className=\"text-muted\">\r\n            E-mail\r\n          </label>\r\n          <input\r\n            onChange={this.handleChange(\"email\")}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            value={email}\r\n            placeholder=\"Votre e-mail de contact (example : guy-tard@gmail.com)\"\r\n            required\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Votre e-mail ne sera partagé avec aucune tierse partie\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Password\" className=\"text-muted\">\r\n            Mot de passe\r\n          </label>\r\n          <input\r\n            onChange={this.handleChange(\"password\")}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            value={password}\r\n            placeholder=\"Ne communiquez jamais votre mot de passe à qui que ce soit.\"\r\n            required\r\n          />\r\n        </div>\r\n        <button\r\n          onClick={this.updateSubmit}\r\n          type=\"submit\"\r\n          className=\"btn btn-raised btn-primary\"\r\n        >\r\n          Modifier\r\n        </button>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {id, pseudo, email, password, redirectionProfile } = this.state;\r\n    if (redirectionProfile) {\r\n      <Redirect to={`/user/${id}`}/>\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <h2 className=\"mt-5 mb-5\">Edit Profile</h2>\r\n        {this.updateForm(pseudo, email, password)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      const userId = this.props.match.params.userId;\r\n      if (userId) {\r\n        this.init(userId);\r\n      } else {\r\n        console.error(\"No userId found.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Something went wrong with componentDidMount method.\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default EditProfile;\r\n"]},"metadata":{},"sourceType":"module"}