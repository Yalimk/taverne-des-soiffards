{"ast":null,"code":"export const read = async (userId, token) => {\n  let response;\n\n  try {\n    response = await fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n  } catch (error) {\n    console.error(`Couldn't get response from api because of error: ${error}.`);\n  }\n\n  if (response) {\n    try {\n      return response.json();\n    } catch (error) {\n      console.error(`Couldn't send the response.json() because of error: ${error}.`);\n    }\n  } else {\n    console.error(`Couldn't find any response for some reason...`);\n  }\n};\nexport const listAllUsers = async () => {\n  let response;\n\n  try {\n    response = await fetch(`${process.env.REACT_APP_API_URI}/users`, {\n      method: \"GET\"\n    });\n  } catch (error) {\n    console.error(`Couldn't get response from api because of error: ${error}.`);\n  }\n\n  if (response) {\n    try {\n      return response.json();\n    } catch (error) {\n      console.error(`Couldn't send the response.json() because of error: ${error}.`);\n    }\n  } else {\n    console.error(`Couldn't find any response for some reason...`);\n  }\n}; // GETTING AN ERROR (TypeError: Failted to fetch) WHEN UPLOADING A PHOTO\n\nexport const updateUser = async (userId, token, user) => {\n  let response;\n\n  try {\n    response = await fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: user\n    });\n  } catch (error) {\n    console.error(`Couldn't put data to api because of error: ${error}.`);\n  }\n\n  if (response) {\n    try {\n      return response.json();\n    } catch (error) {\n      console.error(`Couldn't send the response.json() because of error: ${error}.`);\n    }\n  } else {\n    console.error(`Couldn't find any response for some reason...`);\n  }\n};\nexport const remove = async (userId, token) => {\n  let response;\n\n  try {\n    response = await fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n  } catch (error) {\n    console.error(`Couldn't get response from api because of error: ${error}.`);\n  }\n\n  if (response) {\n    try {\n      return response.json();\n    } catch (error) {\n      console.error(`Couldn't send the response.json() because of error: ${error}.`);\n    }\n  } else {\n    console.error(`Couldn't find any response for some reason...`);\n  }\n};","map":{"version":3,"sources":["C:/Users/virtuoworks/Desktop/taverne-des-soiffards/front-end/src/user/apiUser.js"],"names":["read","userId","token","response","fetch","process","env","REACT_APP_API_URI","method","headers","Accept","Authorization","error","console","json","listAllUsers","updateUser","user","body","remove"],"mappings":"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","sourcesContent":["export const read = async (userId, token) => {\r\n  let response;\r\n  try {\r\n    response = await fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error(`Couldn't get response from api because of error: ${error}.`);\r\n  }\r\n  if (response) {\r\n    try {\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error(\r\n        `Couldn't send the response.json() because of error: ${error}.`\r\n      );\r\n    }\r\n  } else {\r\n    console.error(`Couldn't find any response for some reason...`);\r\n  }\r\n};\r\n\r\nexport const listAllUsers = async () => {\r\n  let response;\r\n  try {\r\n    response = await fetch(`${process.env.REACT_APP_API_URI}/users`, {\r\n      method: \"GET\",\r\n    });\r\n  } catch (error) {\r\n    console.error(`Couldn't get response from api because of error: ${error}.`);\r\n  }\r\n  if (response) {\r\n    try {\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error(\r\n        `Couldn't send the response.json() because of error: ${error}.`\r\n      );\r\n    }\r\n  } else {\r\n    console.error(`Couldn't find any response for some reason...`);\r\n  }\r\n};\r\n\r\n// GETTING AN ERROR (TypeError: Failted to fetch) WHEN UPLOADING A PHOTO\r\nexport const updateUser = async (userId, token, user) => {\r\n  let response;\r\n  try {\r\n    response = await fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: user\r\n    });\r\n  } catch (error) {\r\n    console.error(`Couldn't put data to api because of error: ${error}.`);\r\n  }\r\n  if (response) {\r\n    try {\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error(\r\n        `Couldn't send the response.json() because of error: ${error}.`\r\n      );\r\n    }\r\n  } else {\r\n    console.error(`Couldn't find any response for some reason...`);\r\n  }\r\n};\r\n\r\nexport const remove = async (userId, token) => {\r\n  let response;\r\n  try {\r\n    response = await fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error(`Couldn't get response from api because of error: ${error}.`);\r\n  }\r\n  if (response) {\r\n    try {\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error(\r\n        `Couldn't send the response.json() because of error: ${error}.`\r\n      );\r\n    }\r\n  } else {\r\n    console.error(`Couldn't find any response for some reason...`);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}