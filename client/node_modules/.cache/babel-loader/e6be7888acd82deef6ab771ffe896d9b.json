{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/virtuoworks/Desktop/taverne-des-soiffards/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/virtuoworks/Desktop/taverne-des-soiffards/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export var createPost=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userId,token,post){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"\".concat(process.env.REACT_APP_API_URI,\"/post/new/\").concat(userId),{method:\"POST\",headers:{Accept:\"application/json\",Authorization:\"Bearer \".concat(token)},body:post});case 3:response=_context.sent;return _context.abrupt(\"return\",response.json());case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",console.error(\"Couldn't post data to api because of error: \".concat(_context.t0,\".\")));case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function createPost(_x,_x2,_x3){return _ref.apply(this,arguments);};}();export var postsPerPage=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(page){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(\"\".concat(process.env.REACT_APP_API_URI,\"/posts/?page=\").concat(page),{method:\"GET\"});case 3:response=_context2.sent;return _context2.abrupt(\"return\",response.json());case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);return _context2.abrupt(\"return\",console.error(\"Couldn't get response from api because of error: \".concat(_context2.t0,\".\")));case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function postsPerPage(_x4){return _ref2.apply(this,arguments);};}();export var viewPost=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(postId){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"\".concat(process.env.REACT_APP_API_URI,\"/post/\").concat(postId),{method:\"GET\"});case 3:response=_context3.sent;return _context3.abrupt(\"return\",response.json());case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",console.error(\"Couldn't get response from api in viewPost because of error: \".concat(_context3.t0,\".\")));case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[0,7]]);}));return function viewPost(_x5){return _ref3.apply(this,arguments);};}();export var listUserPosts=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(userId,token){var response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fetch(\"\".concat(process.env.REACT_APP_API_URI,\"/posts/by/\").concat(userId),{method:\"GET\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)}});case 3:response=_context4.sent;return _context4.abrupt(\"return\",response.json());case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);return _context4.abrupt(\"return\",console.error(\"Couldn't get response from api because of error: \".concat(_context4.t0,\".\")));case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));return function listUserPosts(_x6,_x7){return _ref4.apply(this,arguments);};}();export var remove=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(postId,token){var response;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return fetch(\"\".concat(process.env.REACT_APP_API_URI,\"/post/\").concat(postId),{method:\"DELETE\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)}});case 3:response=_context5.sent;return _context5.abrupt(\"return\",response.json());case 7:_context5.prev=7;_context5.t0=_context5[\"catch\"](0);return _context5.abrupt(\"return\",console.error(\"Couldn't get response from api because of error: \".concat(_context5.t0,\".\")));case 10:case\"end\":return _context5.stop();}}},_callee5,null,[[0,7]]);}));return function remove(_x8,_x9){return _ref5.apply(this,arguments);};}();export var updatePost=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(postId,token,post){var response;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;_context6.next=3;return fetch(\"\".concat(process.env.REACT_APP_API_URI,\"/post/\").concat(postId),{method:\"PUT\",headers:{Accept:\"application/json\",Authorization:\"Bearer \".concat(token)},body:post});case 3:response=_context6.sent;console.info('INSIDE UPDATEPOST APRES LE FETCH MAIS AVANT LE RETOUR DE LA REPONSE');return _context6.abrupt(\"return\",response.json());case 8:_context6.prev=8;_context6.t0=_context6[\"catch\"](0);return _context6.abrupt(\"return\",console.error(\"Couldn't put data to api because of error: \".concat(_context6.t0,\".\")));case 11:case\"end\":return _context6.stop();}}},_callee6,null,[[0,8]]);}));return function updatePost(_x10,_x11,_x12){return _ref6.apply(this,arguments);};}();export var writeComment=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(userId,token,postId,comment){var response;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;_context7.next=3;return fetch(\"\".concat(process.env.REACT_APP_API_URI,\"/post/comment\"),{method:\"PUT\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)},body:JSON.stringify({userId:userId,postId:postId,comment:comment})});case 3:response=_context7.sent;return _context7.abrupt(\"return\",response.json());case 7:_context7.prev=7;_context7.t0=_context7[\"catch\"](0);console.error(\"[front-end/src/logic/post/apiPosts.js => writeComment] : error: \".concat(_context7.t0));case 10:case\"end\":return _context7.stop();}}},_callee7,null,[[0,7]]);}));return function writeComment(_x13,_x14,_x15,_x16){return _ref7.apply(this,arguments);};}();export var deleteComment=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(userId,token,postId,comment){var response;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.prev=0;console.log(\"[front-end/src/logic/post/apiPost.js => deleteComment] : userId: \".concat(userId,\", token: \").concat(token,\", postId: \").concat(postId));_context8.next=4;return fetch(\"\".concat(process.env.REACT_APP_API_URI,\"/post/uncomment\"),{method:\"PUT\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)},body:JSON.stringify({userId:userId,postId:postId,comment:comment})});case 4:response=_context8.sent;return _context8.abrupt(\"return\",response.json());case 8:_context8.prev=8;_context8.t0=_context8[\"catch\"](0);console.error(\"[front-end/src/logic/post/apiPosts.js => deleteComment] : error: \".concat(_context8.t0));case 11:case\"end\":return _context8.stop();}}},_callee8,null,[[0,8]]);}));return function deleteComment(_x17,_x18,_x19,_x20){return _ref8.apply(this,arguments);};}();","map":{"version":3,"sources":["C:/Users/virtuoworks/Desktop/taverne-des-soiffards/front-end/src/logic/post/apiPost.js"],"names":["createPost","userId","token","post","fetch","process","env","REACT_APP_API_URI","method","headers","Accept","Authorization","body","response","json","console","error","postsPerPage","page","viewPost","postId","listUserPosts","remove","updatePost","info","writeComment","comment","JSON","stringify","deleteComment","log"],"mappings":"mWAAA,MAAO,IAAMA,CAAAA,UAAU,0FAAG,iBAAOC,MAAP,CAAeC,KAAf,CAAsBC,IAAtB,qKAECC,CAAAA,KAAK,WACvBC,OAAO,CAACC,GAAR,CAAYC,iBADW,sBACmBN,MADnB,EAE1B,CACEO,MAAM,CAAE,MADV,CAEEC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEPC,aAAa,kBAAYT,KAAZ,CAFN,CAFX,CAMEU,IAAI,CAAET,IANR,CAF0B,CAFN,QAEhBU,QAFgB,+CAafA,QAAQ,CAACC,IAAT,EAbe,0FAefC,OAAO,CAACC,KAAR,wEAfe,sEAAH,kBAAVhB,CAAAA,UAAU,oDAAhB,CAqBP,MAAO,IAAMiB,CAAAA,YAAY,2FAAG,kBAAOC,IAAP,2KAEDd,CAAAA,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,iBAAhB,yBAAiDW,IAAjD,EAAyD,CACnFV,MAAM,CAAE,KAD2E,CAAzD,CAFJ,QAElBK,QAFkB,iDAKjBA,QAAQ,CAACC,IAAT,EALiB,8FAOjBC,OAAO,CAACC,KAAR,8EAPiB,wEAAH,kBAAZC,CAAAA,YAAY,8CAAlB,CAaP,MAAO,IAAME,CAAAA,QAAQ,2FAAG,kBAAOC,MAAP,2KAEGhB,CAAAA,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,iBAAhB,kBAA0Ca,MAA1C,EAAoD,CAC9EZ,MAAM,CAAE,KADsE,CAApD,CAFR,QAEdK,QAFc,iDAKbA,QAAQ,CAACC,IAAT,EALa,8FAObC,OAAO,CAACC,KAAR,0FAPa,wEAAH,kBAARG,CAAAA,QAAQ,8CAAd,CAaP,MAAO,IAAME,CAAAA,aAAa,2FAAG,kBAAOpB,MAAP,CAAeC,KAAf,2KAEFE,CAAAA,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,iBAAhB,sBAA8CN,MAA9C,EAAwD,CAClFO,MAAM,CAAE,KAD0E,CAElFC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CAGPC,aAAa,kBAAYT,KAAZ,CAHN,CAFyE,CAAxD,CAFH,QAEnBW,QAFmB,iDAUlBA,QAAQ,CAACC,IAAT,EAVkB,8FAYlBC,OAAO,CAACC,KAAR,8EAZkB,wEAAH,kBAAbK,CAAAA,aAAa,kDAAnB,CAkBP,MAAO,IAAMC,CAAAA,MAAM,2FAAG,kBAAOF,MAAP,CAAelB,KAAf,2KAEKE,CAAAA,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,iBAAhB,kBAA0Ca,MAA1C,EAAoD,CAC9EZ,MAAM,CAAE,QADsE,CAE9EC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CAGPC,aAAa,kBAAYT,KAAZ,CAHN,CAFqE,CAApD,CAFV,QAEZW,QAFY,iDAUXA,QAAQ,CAACC,IAAT,EAVW,8FAYXC,OAAO,CAACC,KAAR,8EAZW,wEAAH,kBAANM,CAAAA,MAAM,kDAAZ,CAkBP,MAAO,IAAMC,CAAAA,UAAU,2FAAG,kBAAOH,MAAP,CAAelB,KAAf,CAAsBC,IAAtB,2KAECC,CAAAA,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,iBAAhB,kBAA0Ca,MAA1C,EAAoD,CAC9EZ,MAAM,CAAE,KADsE,CAE9EC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEPC,aAAa,kBAAYT,KAAZ,CAFN,CAFqE,CAM9EU,IAAI,CAAET,IANwE,CAApD,CAFN,QAEhBU,QAFgB,gBAUtBE,OAAO,CAACS,IAAR,CAAa,qEAAb,EAVsB,iCAWfX,QAAQ,CAACC,IAAT,EAXe,8FAafC,OAAO,CAACC,KAAR,wEAbe,wEAAH,kBAAVO,CAAAA,UAAU,yDAAhB,CAmBP,MAAO,IAAME,CAAAA,YAAY,2FAAG,kBAAOxB,MAAP,CAAeC,KAAf,CAAsBkB,MAAtB,CAA8BM,OAA9B,2KAEDtB,CAAAA,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,iBAAhB,kBAAkD,CAC5EC,MAAM,CAAE,KADoE,CAE5EC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CAGPC,aAAa,kBAAYT,KAAZ,CAHN,CAFmE,CAO5EU,IAAI,CAAEe,IAAI,CAACC,SAAL,CAAe,CAAE3B,MAAM,CAANA,MAAF,CAAUmB,MAAM,CAANA,MAAV,CAAkBM,OAAO,CAAPA,OAAlB,CAAf,CAPsE,CAAlD,CAFJ,QAElBb,QAFkB,iDAWjBA,QAAQ,CAACC,IAAT,EAXiB,6DAaxBC,OAAO,CAACC,KAAR,0FAbwB,sEAAH,kBAAZS,CAAAA,YAAY,8DAAlB,CAiBP,MAAO,IAAMI,CAAAA,aAAa,2FAAG,kBAAO5B,MAAP,CAAeC,KAAf,CAAsBkB,MAAtB,CAA8BM,OAA9B,oJAEzBX,OAAO,CAACe,GAAR,4EAAgF7B,MAAhF,qBAAkGC,KAAlG,sBAAoHkB,MAApH,GAFyB,uBAGFhB,CAAAA,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,iBAAhB,oBAAoD,CAC9EC,MAAM,CAAE,KADsE,CAE9EC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CAGPC,aAAa,kBAAYT,KAAZ,CAHN,CAFqE,CAO9EU,IAAI,CAAEe,IAAI,CAACC,SAAL,CAAe,CAAE3B,MAAM,CAANA,MAAF,CAAUmB,MAAM,CAANA,MAAV,CAAkBM,OAAO,CAAPA,OAAlB,CAAf,CAPwE,CAApD,CAHH,QAGnBb,QAHmB,iDAYlBA,QAAQ,CAACC,IAAT,EAZkB,6DAczBC,OAAO,CAACC,KAAR,2FAdyB,sEAAH,kBAAba,CAAAA,aAAa,8DAAnB","sourcesContent":["export const createPost = async (userId, token, post) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${process.env.REACT_APP_API_URI}/post/new/${userId}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: post,\r\n      }\r\n    );\r\n    return response.json();\r\n  } catch (error) {\r\n    return console.error(\r\n      `Couldn't post data to api because of error: ${error}.`\r\n    );\r\n  }\r\n};\r\n\r\nexport const postsPerPage = async (page) => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/posts/?page=${page}`, {\r\n      method: \"GET\",\r\n    });\r\n    return response.json();\r\n  } catch (error) {\r\n    return console.error(\r\n      `Couldn't get response from api because of error: ${error}.`\r\n    );\r\n  }\r\n};\r\n\r\nexport const viewPost = async (postId) => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/post/${postId}`, {\r\n      method: \"GET\",\r\n    });\r\n    return response.json();\r\n  } catch (error) {\r\n    return console.error(\r\n      `Couldn't get response from api in viewPost because of error: ${error}.`\r\n    );\r\n  }\r\n};\r\n\r\nexport const listUserPosts = async (userId, token) => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/posts/by/${userId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    return response.json();\r\n  } catch (error) {\r\n    return console.error(\r\n      `Couldn't get response from api because of error: ${error}.`\r\n    );\r\n  }\r\n};\r\n\r\nexport const remove = async (postId, token) => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/post/${postId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.json();\r\n  } catch (error) {\r\n    return console.error(\r\n      `Couldn't get response from api because of error: ${error}.`\r\n    );\r\n  }\r\n};\r\n\r\nexport const updatePost = async (postId, token, post) => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/post/${postId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: post,\r\n    });\r\n    console.info('INSIDE UPDATEPOST APRES LE FETCH MAIS AVANT LE RETOUR DE LA REPONSE')\r\n    return response.json();\r\n  } catch (error) {\r\n    return console.error(\r\n      `Couldn't put data to api because of error: ${error}.`\r\n    );\r\n  }\r\n};\r\n\r\nexport const writeComment = async (userId, token, postId, comment) => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/post/comment`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({ userId, postId, comment })\r\n    })\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error(`[front-end/src/logic/post/apiPosts.js => writeComment] : error: ${error}`)\r\n  }\r\n};\r\n\r\nexport const deleteComment = async (userId, token, postId, comment) => {\r\n  try {\r\n    console.log(`[front-end/src/logic/post/apiPost.js => deleteComment] : userId: ${userId}, token: ${token}, postId: ${postId}`);\r\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/post/uncomment`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({ userId, postId, comment })\r\n    })\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error(`[front-end/src/logic/post/apiPosts.js => deleteComment] : error: ${error}`)\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}