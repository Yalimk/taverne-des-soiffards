{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\virtuoworks\\\\Desktop\\\\taverne-des-soiffards\\\\front-end\\\\src\\\\post\\\\EditPost.jsx\";\n// Native modules import\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom'; // Personal modules import\n// import {isLoggedIn} from '../auth/index';\n\nimport { viewPost } from \"./apiPost\";\nimport defaultPostPic from \"../images/beautiful-sea.jpg\";\nimport { isLoggedIn } from '../auth/index';\nimport { updatePost } from '../post/apiPost';\n\nclass EditPost extends Component {\n  constructor() {\n    super();\n\n    this.init = async userId => {\n      try {\n        const data = await viewPost(userId);\n\n        if (data.error) {\n          this.setState = {\n            redirectionProfile: true\n          };\n        } else {\n          this.setState({\n            id: data._id,\n            title: data.title,\n            body: data.body,\n            error: \"\"\n          });\n        }\n      } catch (error) {\n        console.error(`The init method encountered the following error: ${error}`);\n      }\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        error: \"\"\n      });\n      const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n      const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\n      this.postData.set(name, value);\n      this.setState({\n        [name]: value,\n        fileSize\n      });\n    };\n\n    this.isValid = () => {\n      const {\n        title,\n        body,\n        fileSize\n      } = this.state;\n\n      if (fileSize > 1000000) {\n        this.setState({\n          loading: false,\n          error: \"Le poids du fichier ne doit pas dépasser 1Mb ! Déconne pas !\"\n        });\n        return false;\n      }\n\n      if (title.length === 0 || title.length > 50) {\n        this.setState({\n          loading: false,\n          error: \"Le titre est requis et doit faire moins de 50 caractères, marin d'eau douce !\"\n        });\n        return false;\n      }\n\n      if (body.length === 0) {\n        this.setState({\n          loading: false,\n          error: `Un message est requis pour envoyer un... message, moussaillon.`\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.submitUpdate = async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      if (this.isValid()) {\n        const postId = this.state.id;\n        const token = isLoggedIn().token;\n        const data = await updatePost(postId, token, this.postData);\n\n        if (data.error) {\n          this.setState({\n            error: data.error\n          });\n        } else {\n          this.setState({\n            loading: false,\n            title: \"\",\n            body: \"\",\n            photo: \"\",\n            redirectionProfile: true\n          });\n        }\n      }\n    };\n\n    this.postUpdate = (title, body) => /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange(\"photo\"),\n          type: \"file\",\n          accept: \"image/*\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Titre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange(\"title\"),\n          type: \"text\",\n          className: \"form-control\",\n          value: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: this.handleChange(\"body\"),\n          type: \"body\",\n          className: \"form-control\",\n          value: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.submitUpdate,\n        type: \"submit\",\n        className: \"btn btn-raised btn-primary\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this);\n\n    this.state = {\n      id: \"\",\n      title: \"\",\n      body: \"\",\n      redirectionProfile: false,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.postData = new FormData();\n\n    try {\n      const postId = this.props.match.params.postId;\n\n      if (postId) {\n        this.init(postId);\n      } else {\n        console.error(\"No postId found.\");\n      }\n    } catch (error) {\n      console.error(\"Something went wrong with componentDidMount method.\");\n    }\n  }\n\n  render() {\n    const {\n      title,\n      body,\n      id,\n      redirectionProfile\n    } = this.state;\n\n    if (redirectionProfile) {\n      /*#__PURE__*/\n      _jsxDEV(Redirect, {\n        to: `/user/${isLoggedIn()._id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.REACT_APP_API_URI}/post/photo/${id}`,\n          alt: title,\n          onError: img => img.target.src = `${defaultPostPic}`,\n          className: \"img-thumbnail mb-3\",\n          style: {\n            height: \"200px\",\n            width: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title mt-3 mb-3\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this), this.postUpdate(title, body)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default EditPost;","map":{"version":3,"sources":["C:/Users/virtuoworks/Desktop/taverne-des-soiffards/front-end/src/post/EditPost.jsx"],"names":["React","Component","Redirect","viewPost","defaultPostPic","isLoggedIn","updatePost","EditPost","constructor","init","userId","data","error","setState","redirectionProfile","id","_id","title","body","console","handleChange","name","event","value","target","files","fileSize","size","postData","set","isValid","state","loading","length","submitUpdate","preventDefault","postId","token","photo","postUpdate","componentDidMount","FormData","props","match","params","render","process","env","REACT_APP_API_URI","img","src","height","width"],"mappings":"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","sourcesContent":["// Native modules import\r\nimport React, { Component } from \"react\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n// Personal modules import\r\n// import {isLoggedIn} from '../auth/index';\r\nimport { viewPost } from \"./apiPost\";\r\nimport defaultPostPic from \"../images/beautiful-sea.jpg\";\r\nimport {isLoggedIn} from '../auth/index';\r\nimport {updatePost} from '../post/apiPost';\r\n\r\nclass EditPost extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      title: \"\",\r\n      body: \"\",\r\n      redirectionProfile: false,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  init = async (userId) => {\r\n    try {\r\n      const data = await viewPost(userId);\r\n      if (data.error) {\r\n        this.setState = {\r\n          redirectionProfile: true,\r\n        };\r\n      } else {\r\n        this.setState({\r\n          id: data._id,\r\n          title: data.title,\r\n          body: data.body,\r\n          error: \"\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\r\n        `The init method encountered the following error: ${error}`\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.postData = new FormData();\r\n    try {\r\n      const postId = this.props.match.params.postId;\r\n      if (postId) {\r\n        this.init(postId);\r\n      } else {\r\n        console.error(\"No postId found.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Something went wrong with componentDidMount method.\");\r\n    }\r\n  }\r\n\r\n  handleChange = (name) => (event) => {\r\n    this.setState({ error: \"\" });\r\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n    const fileSize =\r\n      name === \"photo\" ? event.target.files[0].size : 0;\r\n    this.postData.set(name, value);\r\n    this.setState({\r\n      [name]: value,\r\n      fileSize,\r\n    });\r\n  };\r\n\r\n  isValid = () => {\r\n    const { title, body, fileSize } = this.state;\r\n    if (fileSize > 1000000) {\r\n      this.setState({\r\n        loading: false,\r\n        error: \"Le poids du fichier ne doit pas dépasser 1Mb ! Déconne pas !\",\r\n      });\r\n      return false;\r\n    }\r\n    if (title.length === 0 || title.length > 50) {\r\n      this.setState({\r\n        loading: false,\r\n        error:\r\n          \"Le titre est requis et doit faire moins de 50 caractères, marin d'eau douce !\",\r\n      });\r\n      return false;\r\n    }\r\n    if (body.length === 0) {\r\n      this.setState({\r\n        loading: false,\r\n        error: `Un message est requis pour envoyer un... message, moussaillon.`,\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  submitUpdate = async (event) => {\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n    \r\n    if (this.isValid()) {\r\n      const postId = this.state.id;\r\n      const token = isLoggedIn().token;\r\n      const data = await updatePost(postId, token, this.postData);\r\n      if (data.error) {\r\n        this.setState({ error: data.error });\r\n      } else {\r\n        this.setState({\r\n          loading: false,\r\n          title: \"\",\r\n          body: \"\",\r\n          photo: \"\",\r\n          redirectionProfile: true\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  postUpdate = (title, body) => (\r\n    <form action=\"\">\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Image</label>\r\n        <input\r\n          onChange={this.handleChange(\"photo\")}\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          className=\"form-control\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Titre</label>\r\n        <input\r\n          onChange={this.handleChange(\"title\")}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={title}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Message</label>\r\n        <textarea\r\n          onChange={this.handleChange(\"body\")}\r\n          type=\"body\"\r\n          className=\"form-control\"\r\n          value={body}\r\n        />\r\n      </div>\r\n      <button\r\n        onClick={this.submitUpdate}\r\n        type=\"submit\"\r\n        className=\"btn btn-raised btn-primary\"\r\n      >\r\n        Envoyer\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  render() {\r\n    const {title, body, id, redirectionProfile} = this.state;\r\n    if (redirectionProfile) {\r\n      <Redirect to={`/user/${isLoggedIn()._id}`} />\r\n    }\r\n    return (\r\n      <div>\r\n        {/* <h2 className=\"mt-3 mb-3\">{title}</h2>\r\n        \r\n        <p className=\"lead\">{body}</p> */}\r\n        <div className=\"card-body\">\r\n                <img\r\n                  src={`${process.env.REACT_APP_API_URI}/post/photo/${id}`}\r\n                  alt={title}\r\n                  onError={img => img.target.src = `${defaultPostPic}`}\r\n                  className=\"img-thumbnail mb-3\"\r\n                  style={{height: \"200px\", width: \"auto\"}}\r\n                />\r\n                <h3 className=\"card-title mt-3 mb-3\">{title}</h3>\r\n                {/* <p className=\"card-text lead\">{body}</p> */}\r\n                {this.postUpdate(title, body)}\r\n              </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditPost;\r\n"]},"metadata":{},"sourceType":"module"}