{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\virtuoworks\\\\Desktop\\\\taverne-des-soiffards\\\\front-end\\\\src\\\\post\\\\EditPost.jsx\";\n// Native modules import\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\"; // Personal modules import\n\nimport { isLoggedIn } from \"../auth/index\";\nimport { viewPost, updatePost } from \"./apiPost\";\nimport defaultPostPic from \"../images/beautiful-sea.jpg\";\n\nclass EditPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: \"\",\n      title: \"\",\n      body: \"\",\n      redirectionProfile: false,\n      error: \"\",\n      loading: false,\n      fileSize: 0\n    };\n\n    this.init = async postId => {\n      console.info(`postId dans la méthode init de EditPost : ${postId}`);\n\n      try {\n        const data = await viewPost(postId);\n\n        if (data.error) {\n          // console.error(\"dans le If data.error de init dans EditPost\");\n          this.setState({\n            redirectionProfile: true\n          });\n        } else {\n          console.info(`data.author._id dans la méthode init de EditPost : ${data.author._id}`);\n          this.setState({\n            id: data._id,\n            title: data.title,\n            body: data.body,\n            error: \"\"\n          });\n        }\n      } catch (error) {\n        console.error(`The init method inside EditPost encountered the following error: ${error}`);\n      }\n    };\n\n    this.isValid = () => {\n      const {\n        title,\n        body,\n        fileSize\n      } = this.state;\n\n      if (fileSize > 1000000) {\n        this.setState({\n          loading: false,\n          error: \"Le poids du fichier ne doit pas dépasser 1Mb ! Déconne pas !\"\n        });\n        return false;\n      }\n\n      if (title.length === 0 || title.length > 50) {\n        this.setState({\n          loading: false,\n          error: \"Le titre est requis et doit faire moins de 50 caractères, marin d'eau douce !\"\n        });\n        return false;\n      }\n\n      if (body.length === 0) {\n        this.setState({\n          loading: false,\n          error: `Un message est requis pour envoyer un... message, moussaillon.`\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        error: \"\"\n      });\n      const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n      const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\n      this.postData.set(name, value);\n      this.setState({\n        [name]: value,\n        fileSize\n      });\n    };\n\n    this.submitUpdate = async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      if (this.isValid()) {\n        const postId = this.props.match.params.postId;\n        const token = isLoggedIn().token;\n\n        try {\n          const data = await updatePost(postId, token, this.postData);\n\n          if (data.error) {\n            this.setState({\n              error: data.error\n            });\n          }\n\n          this.setState({\n            loading: false,\n            title: \"\",\n            body: \"\",\n            redirectionProfile: true\n          });\n        } catch (error) {\n          console.error(`updatePost in EditPost coudldn't retrive data because of error: ${error}.`);\n        }\n      }\n    };\n\n    this.postUpdateForm = (title, body) => /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange(\"photo\"),\n          type: \"file\",\n          name: \"photo\",\n          accept: \"image/*\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Titre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange(\"title\"),\n          type: \"text\",\n          name: \"title\",\n          className: \"form-control\",\n          value: title,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: this.handleChange(\"body\"),\n          type: \"text\",\n          name: \"body\",\n          className: \"form-control\",\n          value: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.submitUpdate,\n        className: \"btn btn-raised btn-primary\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }, this);\n  }\n\n  componentDidMount() {\n    this.postData = new FormData();\n\n    try {\n      const postId = this.props.match.params.postId;\n\n      if (postId) {\n        this.init(postId);\n      } else {\n        console.error(\"No postId found.\");\n      }\n    } catch (error) {\n      console.error(\"Something went wrong with componentDidMount method.\");\n    }\n  }\n\n  render() {\n    const {\n      id,\n      title,\n      body,\n      redirectionProfile,\n      error,\n      loading\n    } = this.state;\n    console.log(\"id inside render de EditPost: \", id); // console.log(\"user._id inside render: \", isLoggedIn().user._id);\n    // console.log(\"user inside render: \", isLoggedIn().user);\n\n    if (redirectionProfile) {\n      // console.log(`redirection vers /user/${isLoggedIn().user._id}` );\n      // console.log(`redirection bis vers ${process.env.REACT_APP_API_URI}/user/${isLoggedIn().user._id}` );\n      // <Redirect to={`${process.env.REACT_APP_API_URI}/user/${isLoggedIn().user._id}`}/>;\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/post/${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (id) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body jumbotron\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            style: {\n              display: error ? \"\" : \"none\"\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jumbotron text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              height: \"200px\",\n              width: \"auto\"\n            },\n            className: \"img-thumbnail mb-3\" // src={`${defaultPostPic}`}\n            ,\n            src: `${process.env.REACT_APP_API_URI}/post/photo/${id}?${new Date().getTime()}`,\n            onError: img => img.target.src = `${defaultPostPic}`,\n            alt: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title mt-3 mb-3\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), this.postUpdateForm(title, body)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body jumbotron\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            style: {\n              display: error ? \"\" : \"none\"\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jumbotron text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              height: \"200px\",\n              width: \"auto\"\n            },\n            className: \"img-thumbnail mb-3\",\n            src: `${defaultPostPic}`,\n            onError: img => img.target.src = `${defaultPostPic}`,\n            alt: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title mt-3 mb-3\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), this.postUpdateForm(title, body)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default EditPost;","map":{"version":3,"sources":["C:/Users/virtuoworks/Desktop/taverne-des-soiffards/front-end/src/post/EditPost.jsx"],"names":["React","Component","Redirect","isLoggedIn","viewPost","updatePost","defaultPostPic","EditPost","state","id","title","body","redirectionProfile","error","loading","fileSize","init","postId","console","info","data","setState","author","_id","isValid","length","handleChange","name","event","value","target","files","size","postData","set","submitUpdate","preventDefault","props","match","params","token","postUpdateForm","componentDidMount","FormData","render","log","display","height","width","process","env","REACT_APP_API_URI","Date","getTime","img","src"],"mappings":"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","sourcesContent":["// Native modules import\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n// Personal modules import\r\nimport { isLoggedIn } from \"../auth/index\";\r\nimport { viewPost, updatePost } from \"./apiPost\";\r\nimport defaultPostPic from \"../images/beautiful-sea.jpg\";\r\n\r\nclass EditPost extends Component {\r\n  state = {\r\n    id: \"\",\r\n    title: \"\",\r\n    body: \"\",\r\n    redirectionProfile: false,\r\n    error: \"\",\r\n    loading: false,\r\n    fileSize: 0,\r\n  };\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     id: \"\",\r\n  //     title: \"\",\r\n  //     body: \"\",\r\n  //     redirectionProfile: false,\r\n  //     error: \"\",\r\n  //     loading: false,\r\n  //     fileSize: 0,\r\n  //   };\r\n  // }\r\n\r\n  init = async (postId) => {\r\n    console.info(`postId dans la méthode init de EditPost : ${postId}`);\r\n    try {\r\n      const data = await viewPost(postId);\r\n      if (data.error) {\r\n        // console.error(\"dans le If data.error de init dans EditPost\");\r\n        this.setState({\r\n          redirectionProfile: true,\r\n        });\r\n      } else {\r\n        console.info(\r\n          `data.author._id dans la méthode init de EditPost : ${data.author._id}`\r\n        );\r\n        this.setState({\r\n          id: data._id,\r\n          title: data.title,\r\n          body: data.body,\r\n          error: \"\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\r\n        `The init method inside EditPost encountered the following error: ${error}`\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.postData = new FormData();\r\n    try {\r\n      const postId = this.props.match.params.postId;\r\n      if (postId) {\r\n        this.init(postId);\r\n      } else {\r\n        console.error(\"No postId found.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Something went wrong with componentDidMount method.\");\r\n    }\r\n  }\r\n\r\n  isValid = () => {\r\n    const { title, body, fileSize } = this.state;\r\n    if (fileSize > 1000000) {\r\n      this.setState({\r\n        loading: false,\r\n        error: \"Le poids du fichier ne doit pas dépasser 1Mb ! Déconne pas !\",\r\n      });\r\n      return false;\r\n    }\r\n    if (title.length === 0 || title.length > 50) {\r\n      this.setState({\r\n        loading: false,\r\n        error:\r\n          \"Le titre est requis et doit faire moins de 50 caractères, marin d'eau douce !\",\r\n      });\r\n      return false;\r\n    }\r\n    if (body.length === 0) {\r\n      this.setState({\r\n        loading: false,\r\n        error: `Un message est requis pour envoyer un... message, moussaillon.`,\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  handleChange = (name) => (event) => {\r\n    this.setState({ error: \"\" });\r\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n\r\n    const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\r\n    this.postData.set(name, value);\r\n    this.setState({ [name]: value, fileSize });\r\n  };\r\n\r\n  submitUpdate = async (event) => {\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n\r\n    if (this.isValid()) {\r\n      const postId = this.props.match.params.postId;\r\n      const token = isLoggedIn().token;\r\n      try {\r\n        const data = await updatePost(postId, token, this.postData);\r\n        if (data.error) {\r\n          this.setState({ error: data.error });\r\n        }\r\n        this.setState({\r\n          loading: false,\r\n          title: \"\",\r\n          body: \"\",\r\n          redirectionProfile: true,\r\n        });\r\n      } catch (error) {\r\n        console.error(\r\n          `updatePost in EditPost coudldn't retrive data because of error: ${error}.`\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  postUpdateForm = (title, body) => (\r\n    <form action=\"\">\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Image</label>\r\n        <input\r\n          onChange={this.handleChange(\"photo\")}\r\n          type=\"file\"\r\n          name=\"photo\"\r\n          accept=\"image/*\"\r\n          className=\"form-control\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Titre</label>\r\n        <input\r\n          onChange={this.handleChange(\"title\")}\r\n          type=\"text\"\r\n          name=\"title\"\r\n          className=\"form-control\"\r\n          value={title}\r\n          autoFocus\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Message</label>\r\n        <textarea\r\n          onChange={this.handleChange(\"body\")}\r\n          type=\"text\"\r\n          name=\"body\"\r\n          className=\"form-control\"\r\n          value={body}\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        onClick={this.submitUpdate}\r\n        className=\"btn btn-raised btn-primary\"\r\n      >\r\n        Envoyer\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  render() {\r\n    const { id, title, body, redirectionProfile, error, loading } = this.state;\r\n    console.log(\"id inside render de EditPost: \", id);\r\n    // console.log(\"user._id inside render: \", isLoggedIn().user._id);\r\n    // console.log(\"user inside render: \", isLoggedIn().user);\r\n\r\n    if (redirectionProfile) {\r\n      // console.log(`redirection vers /user/${isLoggedIn().user._id}` );\r\n      // console.log(`redirection bis vers ${process.env.REACT_APP_API_URI}/user/${isLoggedIn().user._id}` );\r\n      // <Redirect to={`${process.env.REACT_APP_API_URI}/user/${isLoggedIn().user._id}`}/>;\r\n      return <Redirect to={`/post/${id}`} />;\r\n    }\r\n    if (id) {\r\n      return (\r\n        <div>\r\n          {/* {JSON.stringify(this.state)} */}\r\n          <div className=\"card-body jumbotron\">\r\n            <div\r\n              className=\"alert alert-danger\"\r\n              style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n              {error}\r\n            </div>\r\n\r\n            {loading ? (\r\n              <div className=\"jumbotron text-center\">\r\n                <h2>Loading...</h2>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <img\r\n              style={{ height: \"200px\", width: \"auto\" }}\r\n              className=\"img-thumbnail mb-3\"\r\n              // src={`${defaultPostPic}`}\r\n              src={`${\r\n                process.env.REACT_APP_API_URI\r\n              }/post/photo/${id}?${new Date().getTime()}`}\r\n              onError={(img) => (img.target.src = `${defaultPostPic}`)}\r\n              alt={title}\r\n            />\r\n\r\n            <h3 className=\"card-title mt-3 mb-3\">{title}</h3>\r\n\r\n            {this.postUpdateForm(title, body)}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          {/* {JSON.stringify(this.state)} */}\r\n          <div className=\"card-body jumbotron\">\r\n            <div\r\n              className=\"alert alert-danger\"\r\n              style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n              {error}\r\n            </div>\r\n\r\n            {loading ? (\r\n              <div className=\"jumbotron text-center\">\r\n                <h2>Loading...</h2>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <img\r\n              style={{ height: \"200px\", width: \"auto\" }}\r\n              className=\"img-thumbnail mb-3\"\r\n              src={`${defaultPostPic}`}\r\n              onError={(img) => (img.target.src = `${defaultPostPic}`)}\r\n              alt={title}\r\n            />\r\n\r\n            <h3 className=\"card-title mt-3 mb-3\">{title}</h3>\r\n\r\n            {this.postUpdateForm(title, body)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default EditPost;\r\n"]},"metadata":{},"sourceType":"module"}