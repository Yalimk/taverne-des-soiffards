{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\virtuoworks\\\\Desktop\\\\taverne-des-soiffards\\\\front-end\\\\src\\\\pages\\\\post\\\\NewPost.jsx\";\n\n/* eslint-disable no-useless-escape */\n// Navite modules import\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\"; // Personal modules import\n\nimport { isLoggedIn } from \"../../logic/core/index\";\nimport { createPost } from \"../../logic/post/apiPost\";\n\nclass NewPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      body: \"\",\n      photo: \"\",\n      error: \"\",\n      user: {},\n      fileSize: 0,\n      loading: false,\n      redirectionProfile: false\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        error: \"\"\n      });\n      const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n      const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\n      this.postData.set(name, value);\n      this.setState({\n        [name]: value,\n        fileSize\n      });\n    };\n\n    this.isValid = () => {\n      const {\n        title,\n        body,\n        fileSize\n      } = this.state;\n\n      if (fileSize > 1000000) {\n        this.setState({\n          loading: false,\n          error: \"Le poids du fichier ne doit pas dépasser 1Mb ! Déconne pas !\"\n        });\n        return false;\n      }\n\n      if (title.length === 0 || title.length > 50) {\n        this.setState({\n          loading: false,\n          error: \"Le titre est requis et doit faire moins de 50 caractères, marin d'eau douce !\"\n        });\n        return false;\n      }\n\n      if (body.length === 0) {\n        this.setState({\n          loading: false,\n          error: `Un message est requis pour envoyer un... message, moussaillon.`\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.postSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      if (this.isValid()) {\n        const userId = isLoggedIn().user._id;\n\n        const token = isLoggedIn().token;\n        const data = await createPost(userId, token, this.postData);\n\n        if (data.error) {\n          this.setState({\n            error: data.error\n          });\n        } else {\n          this.setState({\n            loading: false,\n            title: \"\",\n            body: \"\",\n            photo: \"\",\n            redirectionProfile: true\n          });\n        }\n      }\n    };\n\n    this.postForm = (title, body) => /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange(\"photo\"),\n          type: \"file\",\n          accept: \"image/*\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Titre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange(\"title\"),\n          type: \"text\",\n          className: \"form-control\",\n          value: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: this.handleChange(\"body\"),\n          type: \"body\",\n          className: \"form-control\",\n          value: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.postSubmit,\n        type: \"submit\",\n        className: \"btn btn-raised btn-primary\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this);\n  }\n\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     title: \"\",\n  //     body: \"\",\n  //     photo: \"\",\n  //     error: \"\",\n  //     user: {},\n  //     fileSize: 0,\n  //     loading: false,\n  //     redirectionProfile: false,\n  //   };\n  // }\n  componentDidMount() {\n    this.postData = new FormData();\n\n    try {\n      this.setState({\n        user: isLoggedIn().user\n      });\n    } catch (error) {\n      console.error(\"Something went wrong with componentDidMount method.\");\n    }\n  }\n\n  render() {\n    const {\n      title,\n      body,\n      user,\n      error,\n      loading,\n      redirectionProfile\n    } = this.state;\n\n    if (redirectionProfile) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/user/${user._id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-5 mb-5\",\n        children: \"Ecrire un message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        style: {\n          display: error ? \"\" : \"none\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jumbotron text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Chargement...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this) : \"\", this.postForm(title, body)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default NewPost;","map":{"version":3,"sources":["C:/Users/virtuoworks/Desktop/taverne-des-soiffards/front-end/src/pages/post/NewPost.jsx"],"names":["React","Component","Redirect","isLoggedIn","createPost","NewPost","state","title","body","photo","error","user","fileSize","loading","redirectionProfile","handleChange","name","event","setState","value","target","files","size","postData","set","isValid","length","postSubmit","preventDefault","userId","_id","token","data","postForm","componentDidMount","FormData","console","render","display"],"mappings":"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","sourcesContent":["/* eslint-disable no-useless-escape */\r\n// Navite modules import\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n// Personal modules import\r\nimport { isLoggedIn } from \"../../logic/core/index\";\r\nimport { createPost } from \"../../logic/post/apiPost\";\r\n\r\nclass NewPost extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\",\r\n    photo: \"\",\r\n    error: \"\",\r\n    user: {},\r\n    fileSize: 0,\r\n    loading: false,\r\n    redirectionProfile: false,\r\n  };\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     title: \"\",\r\n  //     body: \"\",\r\n  //     photo: \"\",\r\n  //     error: \"\",\r\n  //     user: {},\r\n  //     fileSize: 0,\r\n  //     loading: false,\r\n  //     redirectionProfile: false,\r\n  //   };\r\n  // }\r\n\r\n  componentDidMount() {\r\n    this.postData = new FormData();\r\n    try {\r\n      this.setState({\r\n        user: isLoggedIn().user,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Something went wrong with componentDidMount method.\");\r\n    }\r\n  }\r\n\r\n  handleChange = (name) => (event) => {\r\n    this.setState({ error: \"\" });\r\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n    const fileSize =\r\n      name === \"photo\" ? event.target.files[0].size : 0;\r\n    this.postData.set(name, value);\r\n    this.setState({\r\n      [name]: value,\r\n      fileSize,\r\n    });\r\n  };\r\n\r\n  isValid = () => {\r\n    const { title, body, fileSize } = this.state;\r\n    if (fileSize > 1000000) {\r\n      this.setState({\r\n        loading: false,\r\n        error: \"Le poids du fichier ne doit pas dépasser 1Mb ! Déconne pas !\",\r\n      });\r\n      return false;\r\n    }\r\n    if (title.length === 0 || title.length > 50) {\r\n      this.setState({\r\n        loading: false,\r\n        error:\r\n          \"Le titre est requis et doit faire moins de 50 caractères, marin d'eau douce !\",\r\n      });\r\n      return false;\r\n    }\r\n    if (body.length === 0) {\r\n      this.setState({\r\n        loading: false,\r\n        error: `Un message est requis pour envoyer un... message, moussaillon.`,\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  postSubmit = async (event) => {\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n    \r\n    if (this.isValid()) {\r\n      const userId = isLoggedIn().user._id;\r\n      const token = isLoggedIn().token;\r\n      const data = await createPost(userId, token, this.postData);\r\n      if (data.error) {\r\n        this.setState({ error: data.error });\r\n      } else {\r\n        this.setState({\r\n          loading: false,\r\n          title: \"\",\r\n          body: \"\",\r\n          photo: \"\",\r\n          redirectionProfile: true\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  postForm = (title, body) => (\r\n    <form action=\"\">\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Image</label>\r\n        <input\r\n          onChange={this.handleChange(\"photo\")}\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          className=\"form-control\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Titre</label>\r\n        <input\r\n          onChange={this.handleChange(\"title\")}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={title}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Message</label>\r\n        <textarea\r\n          onChange={this.handleChange(\"body\")}\r\n          type=\"body\"\r\n          className=\"form-control\"\r\n          value={body}\r\n        />\r\n      </div>\r\n      <button\r\n        onClick={this.postSubmit}\r\n        type=\"submit\"\r\n        className=\"btn btn-raised btn-primary\"\r\n      >\r\n        Envoyer\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      body,\r\n      user,\r\n      error,\r\n      loading,\r\n      redirectionProfile\r\n    } = this.state;\r\n\r\n    if (redirectionProfile) {\r\n      return <Redirect to={`/user/${user._id}`} />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h2 className=\"mt-5 mb-5\">Ecrire un message</h2>\r\n        <div\r\n          className=\"alert alert-danger\"\r\n          style={{ display: error ? \"\" : \"none\" }}\r\n        >\r\n          {error}\r\n        </div>\r\n        {loading ? (\r\n          <div className=\"jumbotron text-center\">\r\n            <h3>Chargement...</h3>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {this.postForm(title, body)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewPost;\r\n"]},"metadata":{},"sourceType":"module"}