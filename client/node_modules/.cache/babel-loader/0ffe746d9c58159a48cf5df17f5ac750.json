{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\virtuoworks\\\\Desktop\\\\taverne-des-soiffards\\\\front-end\\\\src\\\\core\\\\Taverne.jsx\";\n\n/* eslint-disable no-lone-blocks */\n// Native modules import\nimport React, { useEffect, useState } from \"react\"; // import ReactDOM from \"react-dom\";\n// import io from \"socket.io-client\";\n// Personal modules import\n// import { isLoggedIn } from \"../auth/index\";\n// const socket = io(process.env.CLIENT_URI, {\n//   transports: [\"websocket\", \"polling\"],\n// });\n// const socket = io(\"http://localhost:9092\");\n// const socket = io('http://localhost:9092/', {\n//   transports: [\"websocket\", \"polling\"],\n// });\n// eslint-disable-next-line no-empty-pattern\n\nconst Taverne = ({}) => {\n  // const [users, setUsers] = useState([]);\n  // const [message, setMessage] = useState(\"\");\n  // const [messages, setMessages] = useState([]);\n  // useEffect(() => {\n  //   if (isLoggedIn()) {\n  //     const socket = io(\"http://localhost:9092\");\n  //     // Reception/Emission type events\n  //     socket.on(\"connect\", () => {\n  //       console.log(\n  //         `[front-end/src/core/Homepage.jsx => socket.on('connect')] : pseudo: ${\n  //           isLoggedIn().user.pseudo\n  //         }`\n  //       );\n  //       socket.emit(\"pseudo\", isLoggedIn().user.pseudo);\n  //     });\n  //     // Reception only type events\n  //     socket.on(\"connected\", (user) => {\n  //       console.log(\n  //         `[front-end/src/core/Homepage.jsx => socket.on('connected')] : user: ${user}`\n  //       );\n  //       setUsers((users) => [...users, user]);\n  //     });\n  //     socket.on(\"users\", (users) => {\n  //       console.log(\n  //         `[front-end/src/core/Homepage.jsx => socket.on('users')] : users: ${users}`\n  //       );\n  //       setUsers(users);\n  //     });\n  //     socket.on(\"message\", (message) => {\n  //       setMessages((messages) => [...messages, message]);\n  //     });\n  //     socket.on(\"disconnect\", (id) => {\n  //       console.log(\n  //         `[front-end/src/core/Homepage.jsx => socket.on('disconnect')] : id of disconnected user: ${id}`\n  //       );\n  //       setUsers((users) => {\n  //         return users.filter((user) => user.id !== id);\n  //       });\n  //     });\n  //   }\n  // }, []);\n  // const submitForm = (event) => {\n  // event.preventDefault();\n  // if (isLoggedIn()) {\n  //   const socket = io(\"http://localhost:9092\");\n  //   socket.emit(\"send\", message);\n  //   console.log(\n  //     `[front-end/src/core/Homepage.jsx => submitForm] : message: ${message}`\n  //   );\n  //   setMessage(\"\");\n  // }\n  // };\n  // if (isLoggedIn()) {\n  //   return (\n  //     <div className=\"container jumbotron\">\n  //       <div className=\"row\">\n  //         <div className=\"col-md-12 mt-5 mb-5\">\n  //           <h4 className=\" text-center\" style={{fontWeight: \"bold\"}}>Bienvenue dans la Taverne, {isLoggedIn().user.pseudo}</h4>\n  //         </div>\n  //       </div>\n  {\n    /* <div className=\"row\">\r\n     <div className=\"col-md-8\">\r\n       <h5>Messages</h5>\r\n       <div>\r\n         {messages.map(({ user, message, date }, index) => (\r\n           <div key={index} className=\"row mb-2\">\r\n             <div className=\"col-md-2\">{date}</div>\r\n             <div className=\"col-md-2\">{user.pseudo}</div>\r\n             <div className=\"col-md-2\">{message}</div>\r\n           </div>\r\n         ))}\r\n       </div>\r\n       <form action=\"\" onSubmit={submitForm}>\r\n         <div className=\"input-group\">\r\n           <input\r\n             type=\"text\"\r\n             className=\"form-control\"\r\n             onChange={(event) => setMessage(event.currentTarget.value)}\r\n             value={message}\r\n           />\r\n           <span className=\"input-group-btn\">\r\n             <button className=\"btn btn-primary btn-sm\">Envoyer</button>\r\n           </span>\r\n         </div>\r\n       </form>\r\n     </div>\r\n     <div className=\"col-md-4\">\r\n       <h5>Pirates prÃ©sents</h5>\r\n       <ul>\r\n         {users.map(({ name, id }) => (\r\n           <li key={id}>{name}</li>\r\n         ))}\r\n       </ul>\r\n     </div>\r\n    </div> */\n  }\n  {\n    /* </div>\r\n    );\r\n    } else { */\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container jumbotron\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 mt-5 mb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \" text-center\",\n          style: {\n            fontWeight: \"bold\"\n          },\n          children: \"Bienvenue dans la Taverne, pirate !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 7\n  }, this);\n}; // };\n\n\n_c = Taverne;\nexport default Taverne;\n\nvar _c;\n\n$RefreshReg$(_c, \"Taverne\");","map":{"version":3,"sources":["C:/Users/virtuoworks/Desktop/taverne-des-soiffards/front-end/src/core/Taverne.jsx"],"names":["React","useEffect","useState","Taverne","fontWeight"],"mappings":";;;AAAA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAMC,OAAO,GAAG,CAAC,EAAD,KAAQ;AACtB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM;AAAC;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAkB;AACZ;AAAC;AACP;AACA;AAAc;AACV,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,cAAd;AAA6B,UAAA,KAAK,EAAE;AAACC,YAAAA,UAAU,EAAE;AAAb,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAnHH,C,CAoHA;;;KApHMD,O;AAsHN,eAAeA,OAAf","sourcesContent":["/* eslint-disable no-lone-blocks */\r\n// Native modules import\r\nimport React, { useEffect, useState } from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\n// import io from \"socket.io-client\";\r\n\r\n// Personal modules import\r\n// import { isLoggedIn } from \"../auth/index\";\r\n\r\n// const socket = io(process.env.CLIENT_URI, {\r\n//   transports: [\"websocket\", \"polling\"],\r\n// });\r\n// const socket = io(\"http://localhost:9092\");\r\n// const socket = io('http://localhost:9092/', {\r\n//   transports: [\"websocket\", \"polling\"],\r\n// });\r\n\r\n// eslint-disable-next-line no-empty-pattern\r\nconst Taverne = ({}) => {\r\n  // const [users, setUsers] = useState([]);\r\n  // const [message, setMessage] = useState(\"\");\r\n  // const [messages, setMessages] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   if (isLoggedIn()) {\r\n  //     const socket = io(\"http://localhost:9092\");\r\n  //     // Reception/Emission type events\r\n  //     socket.on(\"connect\", () => {\r\n  //       console.log(\r\n  //         `[front-end/src/core/Homepage.jsx => socket.on('connect')] : pseudo: ${\r\n  //           isLoggedIn().user.pseudo\r\n  //         }`\r\n  //       );\r\n  //       socket.emit(\"pseudo\", isLoggedIn().user.pseudo);\r\n  //     });\r\n\r\n  //     // Reception only type events\r\n  //     socket.on(\"connected\", (user) => {\r\n  //       console.log(\r\n  //         `[front-end/src/core/Homepage.jsx => socket.on('connected')] : user: ${user}`\r\n  //       );\r\n  //       setUsers((users) => [...users, user]);\r\n  //     });\r\n\r\n  //     socket.on(\"users\", (users) => {\r\n  //       console.log(\r\n  //         `[front-end/src/core/Homepage.jsx => socket.on('users')] : users: ${users}`\r\n  //       );\r\n  //       setUsers(users);\r\n  //     });\r\n\r\n  //     socket.on(\"message\", (message) => {\r\n  //       setMessages((messages) => [...messages, message]);\r\n  //     });\r\n\r\n  //     socket.on(\"disconnect\", (id) => {\r\n  //       console.log(\r\n  //         `[front-end/src/core/Homepage.jsx => socket.on('disconnect')] : id of disconnected user: ${id}`\r\n  //       );\r\n  //       setUsers((users) => {\r\n  //         return users.filter((user) => user.id !== id);\r\n  //       });\r\n  //     });\r\n  //   }\r\n  // }, []);\r\n\r\n  // const submitForm = (event) => {\r\n    // event.preventDefault();\r\n    // if (isLoggedIn()) {\r\n    //   const socket = io(\"http://localhost:9092\");\r\n    //   socket.emit(\"send\", message);\r\n    //   console.log(\r\n    //     `[front-end/src/core/Homepage.jsx => submitForm] : message: ${message}`\r\n    //   );\r\n    //   setMessage(\"\");\r\n    // }\r\n  // };\r\n\r\n  // if (isLoggedIn()) {\r\n  //   return (\r\n  //     <div className=\"container jumbotron\">\r\n  //       <div className=\"row\">\r\n  //         <div className=\"col-md-12 mt-5 mb-5\">\r\n  //           <h4 className=\" text-center\" style={{fontWeight: \"bold\"}}>Bienvenue dans la Taverne, {isLoggedIn().user.pseudo}</h4>\r\n  //         </div>\r\n  //       </div>\r\n        {/* <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <h5>Messages</h5>\r\n            <div>\r\n              {messages.map(({ user, message, date }, index) => (\r\n                <div key={index} className=\"row mb-2\">\r\n                  <div className=\"col-md-2\">{date}</div>\r\n                  <div className=\"col-md-2\">{user.pseudo}</div>\r\n                  <div className=\"col-md-2\">{message}</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <form action=\"\" onSubmit={submitForm}>\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  onChange={(event) => setMessage(event.currentTarget.value)}\r\n                  value={message}\r\n                />\r\n                <span className=\"input-group-btn\">\r\n                  <button className=\"btn btn-primary btn-sm\">Envoyer</button>\r\n                </span>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <h5>Pirates prÃ©sents</h5>\r\n            <ul>\r\n              {users.map(({ name, id }) => (\r\n                <li key={id}>{name}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div> */}\r\n      {/* </div>\r\n    );\r\n  } else { */}\r\n    return (\r\n      <div className=\"container jumbotron\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 mt-5 mb-5\">\r\n            <h4 className=\" text-center\" style={{fontWeight: \"bold\"}}>Bienvenue dans la Taverne, pirate !</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n// };\r\n\r\nexport default Taverne;\r\n"]},"metadata":{},"sourceType":"module"}