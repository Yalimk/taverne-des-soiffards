{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\virtuoworks\\\\Desktop\\\\taverne-des-soiffards\\\\front-end\\\\src\\\\components\\\\post\\\\WriteComment.jsx\";\n// Native modules import\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\"; // Personal modules import\n\nimport { writeComment, deleteComment } from \"../../logic/post/apiPost\";\nimport { isLoggedIn } from \"../../logic/auth/index\";\nimport defaultProfilePic from \"../../images/default-image.png\";\n\nclass WriteComment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: \"\" // error: \"\",\n\n    };\n\n    this.handleChange = event => {\n      // this.setState({\n      //   error: \"\",\n      // });\n      this.setState({\n        message: event.target.value\n      });\n    };\n\n    this.addComment = async event => {\n      event.preventDefault();\n\n      const userId = isLoggedIn().user._id;\n\n      const token = isLoggedIn().token;\n      const postId = this.props.postId;\n      const comment = {\n        message: this.state.message\n      }; // if (this.isValid()) {\n\n      try {\n        const response = await writeComment(userId, token, postId, comment);\n\n        if (response.error) {\n          console.log(`[front-end/src/components/post/WriteComment.jsx => addComment] : response.error: ${JSON.stringify(response.error)}`);\n        } else {\n          this.setState({\n            message: \"\"\n          });\n          this.props.updateComments(response.comments);\n        }\n      } catch (error) {\n        console.error(`[front-end/src/components/post/WriteComment.jsx => addComment] : error: ${error}`);\n      } // } else {\n      //   console.error(`[front-end/src/components/post/WriteComment.jsx => addComment] : The validation didn't go through.`)\n      // }\n\n    };\n  }\n\n  // removeComment = (comment) => {\n  //   const userId = isLoggedIn().user._id;\n  //   const token = isLoggedIn().token;\n  //   const postId = this.props.postId;\n  //   deleteComment(userId, token, postId, comment).then(data => {\n  //     if (data.error) {\n  //         console.log(data.error);\n  //     } else {\n  //         this.props.updateComments(data.comments);\n  //     }\n  //   });\n  // };\n  //   deleteConfirmation = comment => {\n  //     let answer = window.confirm(\n  //       \"Es-tu sÃ»r de vouloir supprimer ton message, pirate ?\"\n  //     );\n  //     if (answer) {\n  //       this.deleteComment(comment);\n  //     }\n  // };\n  render() {\n    const {\n      comments,\n      postId\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-5\",\n        children: \"Donne ton avis sur ce message, moussaillon !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          onSubmit: this.addComment,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            onChange: this.handleChange,\n            placeholder: \"Ecris ici ton avis, bachi-bouzouk...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-primary\",\n          children: [comments.length, \" Commentaire\", comments.length === 1 ? '' : 's']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), comments.map((comment, i) => {\n          var _comment$author, _comment$author3;\n\n          let commentatorProfile;\n\n          if (typeof ((_comment$author = comment.author) === null || _comment$author === void 0 ? void 0 : _comment$author.pseudo) === \"string\") {\n            var _comment$author2;\n\n            commentatorProfile = ((_comment$author2 = comment.author) === null || _comment$author2 === void 0 ? void 0 : _comment$author2._id) ? `/user/${comment.author._id}` : \"\";\n          }\n\n          const commentatorPseudo = ((_comment$author3 = comment.author) === null || _comment$author3 === void 0 ? void 0 : _comment$author3.pseudo) ? comment.author.pseudo : \"un Inconnu\";\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                padding: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/user/${comment.author._id}`,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  style: {\n                    borderRadius: \"50%\",\n                    border: \"1px solid black\"\n                  },\n                  className: \"float-left mr-2\",\n                  height: \"30px\",\n                  width: \"30px\",\n                  onError: img => img.target.src = `${defaultProfilePic}`,\n                  src: `${process.env.REACT_APP_API_URI}/user/photo/${comment.author._id}`,\n                  alt: commentatorPseudo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"lead\",\n                children: [\" \", comment.message]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-italic\",\n              style: {\n                fontSize: \"0.7rem\"\n              },\n              children: [\"Post\\xE9 par\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                to: typeof commentatorPseudo === \"string\" ? commentatorProfile : `/post/${postId}`,\n                style: {\n                  color: \"#3BA7BF\"\n                },\n                children: commentatorPseudo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this), \" \", \"le \", new Date(comment.created).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default WriteComment;","map":{"version":3,"sources":["C:/Users/virtuoworks/Desktop/taverne-des-soiffards/front-end/src/components/post/WriteComment.jsx"],"names":["React","Component","Link","writeComment","deleteComment","isLoggedIn","defaultProfilePic","WriteComment","state","message","handleChange","event","setState","target","value","addComment","preventDefault","userId","user","_id","token","postId","props","comment","response","error","console","log","JSON","stringify","updateComments","comments","render","length","map","i","commentatorProfile","author","pseudo","commentatorPseudo","padding","borderRadius","border","img","src","process","env","REACT_APP_API_URI","fontSize","color","Date","created","toLocaleDateString"],"mappings":"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","sourcesContent":["// Native modules import\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Personal modules import\r\nimport { writeComment, deleteComment } from \"../../logic/post/apiPost\";\r\nimport { isLoggedIn } from \"../../logic/auth/index\";\r\nimport defaultProfilePic from \"../../images/default-image.png\";\r\n\r\nclass WriteComment extends Component {\r\n  state = {\r\n    message: \"\",\r\n    // error: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    // this.setState({\r\n    //   error: \"\",\r\n    // });\r\n    this.setState({\r\n      message: event.target.value,\r\n    });\r\n  };\r\n\r\n  // isValid = () => {\r\n  //   const { message } = this.state;\r\n  //   if (!message.length > 0 || message.length > 300) {\r\n  //     this.setState({\r\n  //       error:\r\n  //         \"Ton commentaire doit Ãªtre d'au moins 1 caractÃ¨re et d'au plus 300 caractÃ¨res, moussaillon !\",\r\n  //     });\r\n  //     return false;\r\n  //   }\r\n  //   return true;\r\n  // };\r\n\r\n  addComment = async (event) => {\r\n    event.preventDefault();\r\n    const userId = isLoggedIn().user._id;\r\n    const token = isLoggedIn().token;\r\n    const postId = this.props.postId;\r\n    const comment = { message: this.state.message };\r\n\r\n    // if (this.isValid()) {\r\n    try {\r\n      const response = await writeComment(userId, token, postId, comment);\r\n      if (response.error) {\r\n        console.log(\r\n          `[front-end/src/components/post/WriteComment.jsx => addComment] : response.error: ${JSON.stringify(\r\n            response.error\r\n          )}`\r\n        );\r\n      } else {\r\n        this.setState({\r\n          message: \"\",\r\n        });\r\n        this.props.updateComments(response.comments);\r\n      }\r\n    } catch (error) {\r\n      console.error(\r\n        `[front-end/src/components/post/WriteComment.jsx => addComment] : error: ${error}`\r\n      );\r\n    }\r\n    // } else {\r\n    //   console.error(`[front-end/src/components/post/WriteComment.jsx => addComment] : The validation didn't go through.`)\r\n    // }\r\n  };\r\n\r\n  // removeComment = (comment) => {\r\n  //   const userId = isLoggedIn().user._id;\r\n  //   const token = isLoggedIn().token;\r\n  //   const postId = this.props.postId;\r\n\r\n  //   deleteComment(userId, token, postId, comment).then(data => {\r\n  //     if (data.error) {\r\n  //         console.log(data.error);\r\n  //     } else {\r\n  //         this.props.updateComments(data.comments);\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  //   deleteConfirmation = comment => {\r\n  //     let answer = window.confirm(\r\n  //       \"Es-tu sÃ»r de vouloir supprimer ton message, pirate ?\"\r\n  //     );\r\n  //     if (answer) {\r\n  //       this.deleteComment(comment);\r\n  //     }\r\n  // };\r\n\r\n  render() {\r\n    const { comments, postId } = this.props;\r\n\r\n    return (\r\n      <div className=\"container jumbotron\">\r\n        <h2 className=\"mb-5\">Donne ton avis sur ce message, moussaillon !</h2>\r\n        <div className=\"form-group\">\r\n          <form action=\"\" onSubmit={this.addComment}>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              onChange={this.handleChange}\r\n              placeholder=\"Ecris ici ton avis, bachi-bouzouk...\"\r\n            />\r\n          </form>\r\n        </div>\r\n        {/* {JSON.stringify(comments)} */}\r\n        <div className=\"col-md-12\">\r\n          <h3 className=\"text-primary\">{comments.length} Commentaire{comments.length === 1 ? '' : 's'}</h3>\r\n          <hr />\r\n          {comments.map((comment, i) => {\r\n            let commentatorProfile;\r\n            if (typeof comment.author?.pseudo === \"string\") {\r\n              commentatorProfile = comment.author?._id\r\n                ? `/user/${comment.author._id}`\r\n                : \"\";\r\n            }\r\n            const commentatorPseudo = comment.author?.pseudo\r\n              ? comment.author.pseudo\r\n              : \"un Inconnu\";\r\n            return (\r\n              <div className=\"row\" key={i}>\r\n                <div className=\"col-md-12\" style={{ padding: 0 }}>\r\n                  <Link to={`/user/${comment.author._id}`}>\r\n                    <img\r\n                      style={{\r\n                        borderRadius: \"50%\",\r\n                        border: \"1px solid black\",\r\n                      }}\r\n                      className=\"float-left mr-2\"\r\n                      height=\"30px\"\r\n                      width=\"30px\"\r\n                      onError={(img) =>\r\n                        (img.target.src = `${defaultProfilePic}`)\r\n                      }\r\n                      src={`${process.env.REACT_APP_API_URI}/user/photo/${comment.author._id}`}\r\n                      alt={commentatorPseudo}\r\n                    />\r\n                  </Link>\r\n                  <p className=\"lead\">\r\n                    {/* {commentatorPseudo} : */} {comment.message}\r\n                  </p>\r\n                </div>\r\n                <p className=\"font-italic\" style={{ fontSize: \"0.7rem\" }}>\r\n                  PostÃ© par{\" \"}\r\n                  <Link\r\n                    to={\r\n                      typeof commentatorPseudo === \"string\"\r\n                        ? commentatorProfile\r\n                        : `/post/${postId}`\r\n                    }\r\n                    style={{ color: \"#3BA7BF\" }}\r\n                  >\r\n                    {commentatorPseudo}\r\n                  </Link>{\" \"}\r\n                  le {new Date(comment.created).toLocaleDateString()}\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WriteComment;\r\n"]},"metadata":{},"sourceType":"module"}