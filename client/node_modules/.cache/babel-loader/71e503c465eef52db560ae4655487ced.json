{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\virtuoworks\\\\Desktop\\\\taverne-des-soiffards\\\\front-end\\\\src\\\\post\\\\EditPost.jsx\";\n// Native modules import\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\"; // Personal modules import\n// import {isLoggedIn} from '../auth/index';\n\nimport { viewPost } from \"./apiPost\";\nimport defaultPostPic from \"../images/beautiful-sea.jpg\";\nimport { isLoggedIn } from \"../auth/index\";\nimport { updatePost } from \"../post/apiPost\"; // class EditPost extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       id: \"\",\n//       title: \"\",\n//       body: \"\",\n//       redirectionProfile: false,\n//       error: \"\",\n//       fileSize: 0,\n//       loading: false,\n//     };\n//   }\n//   init = async (postId) => {\n//     try {\n//       const data = await viewPost(postId);\n//       if (data.error) {\n//         this.setState({\n//           redirectionProfile: true,\n//         });\n//       } else {\n//         this.setState({\n//           id: data.author._id,\n//           title: data.title,\n//           body: data.body,\n//           error: \"\",\n//         });\n//       }\n//     } catch (error) {\n//       console.error(\n//         `The init method encountered the following error: ${error}`\n//       );\n//     }\n//   };\n//   componentDidMount() {\n//     this.postData = new FormData();\n//     try {\n//       const postId = this.props.match.params.postId;\n//       if (postId) {\n//         this.init(postId);\n//       } else {\n//         console.error(\"No postId found.\");\n//       }\n//     } catch (error) {\n//       console.error(\"Something went wrong with componentDidMount method.\");\n//     }\n//   }\n//   isValid = () => {\n//     const { title, body, fileSize } = this.state;\n//     if (fileSize > 1000000) {\n//       this.setState({\n//         loading: false,\n//         error: \"Le poids du fichier ne doit pas dépasser 1Mb ! Déconne pas !\",\n//       });\n//       return false;\n//     }\n//     if (title.length === 0 || title.length > 50) {\n//       this.setState({\n//         loading: false,\n//         error:\n//           \"Le titre est requis et doit faire moins de 50 caractères, marin d'eau douce !\",\n//       });\n//       return false;\n//     }\n//     if (body.length === 0) {\n//       this.setState({\n//         loading: false,\n//         error: `Un message est requis pour envoyer un... message, moussaillon.`,\n//       });\n//       return false;\n//     }\n//     return true;\n//   };\n//   // handleChange = (name) => (event) => {\n//   //   this.setState({ error: \"\" });\n//   //   const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n//   //   const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\n//   //   this.postData.set(name, value);\n//   //   this.setState({\n//   //     [name]: value,\n//   //     fileSize,\n//   //   });\n//   // };\n//   handleChange = (name) => (event) => {\n//     this.setState({ error: \"\" });\n//     const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n//     const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\n//     this.postData.set(name, value);\n//     this.setState({ [name]: value, fileSize });\n//   };\n//   submitUpdate = async (event) => {\n//     event.preventDefault();\n//     this.setState({ loading: true });\n//     if (this.isValid()) {\n//       const postId = this.props.match.params.postId;\n//       const token = isLoggedIn().token;\n//       const data = await updatePost(postId, token, this.postData);\n//       if (data.error) {\n//         this.setState({ error: data.error });\n//       } else {\n//         this.setState({\n//           loading: false,\n//           title: \"\",\n//           body: \"\",\n//           redirectionProfile: true,\n//         });\n//       }\n//     }\n//   };\n//   postUpdate = (title, body) => (\n//     <form action=\"\">\n//       <div className=\"form-group\">\n//         <label className=\"text-muted\">Image</label>\n//         <input\n//           onChange={this.handleChange(\"photo\")}\n//           type=\"file\"\n//           accept=\"image/*\"\n//           className=\"form-control\"\n//         />\n//       </div>\n//       <div className=\"form-group\">\n//         <label className=\"text-muted\">Titre</label>\n//         <input\n//           onChange={this.handleChange(\"title\")}\n//           type=\"text\"\n//           className=\"form-control\"\n//           value={title}\n//         />\n//       </div>\n//       <div className=\"form-group\">\n//         <label className=\"text-muted\">Message</label>\n//         <textarea\n//           onChange={this.handleChange(\"body\")}\n//           type=\"body\"\n//           className=\"form-control\"\n//           value={body}\n//         />\n//       </div>\n//       <button\n//         onClick={this.submitUpdate}\n//         type=\"submit\"\n//         className=\"btn btn-raised btn-primary\"\n//       >\n//         Envoyer\n//       </button>\n//     </form>\n//   );\n//   render() {\n//     const { title, body, id, redirectionProfile } = this.state;\n//     console.log('id inside render: ', id)\n//     console.log('user._id inside render: ', isLoggedIn().user._id)\n//     console.log('user inside render: ', isLoggedIn().user)\n//     if (redirectionProfile) {\n//       <Redirect to={`/user/${isLoggedIn().user._id}`} />;\n//     }\n//     return (\n//       <div>\n//         <div className=\"card-body\">\n//           <img\n//             src={`${process.env.REACT_APP_API_URI}/post/photo/${id}`}\n//             alt={title}\n//             onError={(img) => (img.target.src = `${defaultPostPic}`)}\n//             className=\"img-thumbnail mb-3\"\n//             style={{ height: \"200px\", width: \"auto\" }}\n//           />\n//           <h3 className=\"card-title mt-3 mb-3\">{title}</h3>\n//           {isLoggedIn().user._id === id && this.postUpdate(title, body)}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default EditPost;\n\nclass EditPost extends Component {\n  constructor() {\n    super();\n\n    this.init = postId => {\n      viewPost(postId).then(data => {\n        if (data.error) {\n          this.setState({\n            redirectToProfile: true\n          });\n        } else {\n          this.setState({\n            id: data.postedBy._id,\n            title: data.title,\n            body: data.body,\n            error: \"\"\n          });\n        }\n      });\n    };\n\n    this.isValid = () => {\n      const {\n        title,\n        body,\n        fileSize\n      } = this.state;\n\n      if (fileSize > 1000000) {\n        this.setState({\n          error: \"File size should be less than 100kb\",\n          loading: false\n        });\n        return false;\n      }\n\n      if (title.length === 0 || body.length === 0) {\n        this.setState({\n          error: \"All fields are required\",\n          loading: false\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        error: \"\"\n      });\n      const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n      const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\n      this.postData.set(name, value);\n      this.setState({\n        [name]: value,\n        fileSize\n      });\n    };\n\n    this.clickSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      if (this.isValid()) {\n        const postId = this.props.match.params.postId;\n        const token = isLoggedIn().token;\n        updatePost(postId, token, this.postData).then(data => {\n          if (data.error) this.setState({\n            error: data.error\n          });else {\n            this.setState({\n              loading: false,\n              title: \"\",\n              body: \"\",\n              redirectToProfile: true\n            });\n          }\n        });\n      }\n    };\n\n    this.editPostForm = (title, body) => /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Post Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange(\"photo\"),\n          type: \"file\",\n          accept: \"image/*\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange(\"title\"),\n          type: \"text\",\n          className: \"form-control\",\n          value: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: this.handleChange(\"body\"),\n          type: \"text\",\n          className: \"form-control\",\n          value: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.clickSubmit,\n        className: \"btn btn-raised btn-primary\",\n        children: \"Update Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this);\n\n    this.state = {\n      id: \"\",\n      title: \"\",\n      body: \"\",\n      redirectToProfile: false,\n      error: \"\",\n      fileSize: 0,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.postData = new FormData();\n    const postId = this.props.match.params.postId;\n    this.init(postId);\n  }\n\n  render() {\n    const {\n      id,\n      title,\n      body,\n      redirectToProfile,\n      error,\n      loading\n    } = this.state;\n\n    if (redirectToProfile) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/user/${isLoggedIn().user._id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 18\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-5 mb-5\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        style: {\n          display: error ? \"\" : \"none\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 15\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jumbotron text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 19\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          height: \"200px\",\n          width: \"auto\"\n        },\n        className: \"img-thumbnail\",\n        src: `${process.env.REACT_APP_API_URL}/post/photo/${id}`,\n        onError: i => i.target.src = `${defaultPostPic}`,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 15\n      }, this), isLoggedIn().user._id === id && this.editPostForm(title, body)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default EditPost;","map":{"version":3,"sources":["C:/Users/virtuoworks/Desktop/taverne-des-soiffards/front-end/src/post/EditPost.jsx"],"names":["React","Component","Redirect","viewPost","defaultPostPic","isLoggedIn","updatePost","EditPost","constructor","init","postId","then","data","error","setState","redirectToProfile","id","postedBy","_id","title","body","isValid","fileSize","state","loading","length","handleChange","name","event","value","target","files","size","postData","set","clickSubmit","preventDefault","props","match","params","token","editPostForm","componentDidMount","FormData","render","user","display","height","width","process","env","REACT_APP_API_URL","i","src"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CAEA;AACA;;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,UAAT,QAA2B,iBAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/BO,EAAAA,WAAW,GAAG;AACV;;AADU,SAadC,IAbc,GAaPC,MAAM,IAAI;AACbP,MAAAA,QAAQ,CAACO,MAAD,CAAR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","sourcesContent":["// Native modules import\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n// Personal modules import\r\n// import {isLoggedIn} from '../auth/index';\r\nimport { viewPost } from \"./apiPost\";\r\nimport defaultPostPic from \"../images/beautiful-sea.jpg\";\r\nimport { isLoggedIn } from \"../auth/index\";\r\nimport { updatePost } from \"../post/apiPost\";\r\n\r\n// class EditPost extends Component {\r\n//   constructor() {\r\n//     super();\r\n//     this.state = {\r\n//       id: \"\",\r\n//       title: \"\",\r\n//       body: \"\",\r\n//       redirectionProfile: false,\r\n//       error: \"\",\r\n//       fileSize: 0,\r\n//       loading: false,\r\n//     };\r\n//   }\r\n\r\n//   init = async (postId) => {\r\n//     try {\r\n//       const data = await viewPost(postId);\r\n//       if (data.error) {\r\n//         this.setState({\r\n//           redirectionProfile: true,\r\n//         });\r\n//       } else {\r\n//         this.setState({\r\n//           id: data.author._id,\r\n//           title: data.title,\r\n//           body: data.body,\r\n//           error: \"\",\r\n//         });\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\r\n//         `The init method encountered the following error: ${error}`\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     this.postData = new FormData();\r\n//     try {\r\n//       const postId = this.props.match.params.postId;\r\n//       if (postId) {\r\n//         this.init(postId);\r\n//       } else {\r\n//         console.error(\"No postId found.\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Something went wrong with componentDidMount method.\");\r\n//     }\r\n//   }\r\n\r\n//   isValid = () => {\r\n//     const { title, body, fileSize } = this.state;\r\n//     if (fileSize > 1000000) {\r\n//       this.setState({\r\n//         loading: false,\r\n//         error: \"Le poids du fichier ne doit pas dépasser 1Mb ! Déconne pas !\",\r\n//       });\r\n//       return false;\r\n//     }\r\n//     if (title.length === 0 || title.length > 50) {\r\n//       this.setState({\r\n//         loading: false,\r\n//         error:\r\n//           \"Le titre est requis et doit faire moins de 50 caractères, marin d'eau douce !\",\r\n//       });\r\n//       return false;\r\n//     }\r\n//     if (body.length === 0) {\r\n//       this.setState({\r\n//         loading: false,\r\n//         error: `Un message est requis pour envoyer un... message, moussaillon.`,\r\n//       });\r\n//       return false;\r\n//     }\r\n//     return true;\r\n//   };\r\n\r\n//   // handleChange = (name) => (event) => {\r\n//   //   this.setState({ error: \"\" });\r\n//   //   const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n//   //   const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\r\n//   //   this.postData.set(name, value);\r\n//   //   this.setState({\r\n//   //     [name]: value,\r\n//   //     fileSize,\r\n//   //   });\r\n//   // };\r\n\r\n//   handleChange = (name) => (event) => {\r\n//     this.setState({ error: \"\" });\r\n//     const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n\r\n//     const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\r\n//     this.postData.set(name, value);\r\n//     this.setState({ [name]: value, fileSize });\r\n//   };\r\n\r\n//   submitUpdate = async (event) => {\r\n//     event.preventDefault();\r\n//     this.setState({ loading: true });\r\n\r\n//     if (this.isValid()) {\r\n//       const postId = this.props.match.params.postId;\r\n//       const token = isLoggedIn().token;\r\n\r\n//       const data = await updatePost(postId, token, this.postData);\r\n//       if (data.error) {\r\n//         this.setState({ error: data.error });\r\n//       } else {\r\n//         this.setState({\r\n//           loading: false,\r\n//           title: \"\",\r\n//           body: \"\",\r\n//           redirectionProfile: true,\r\n//         });\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   postUpdate = (title, body) => (\r\n//     <form action=\"\">\r\n//       <div className=\"form-group\">\r\n//         <label className=\"text-muted\">Image</label>\r\n//         <input\r\n//           onChange={this.handleChange(\"photo\")}\r\n//           type=\"file\"\r\n//           accept=\"image/*\"\r\n//           className=\"form-control\"\r\n//         />\r\n//       </div>\r\n//       <div className=\"form-group\">\r\n//         <label className=\"text-muted\">Titre</label>\r\n//         <input\r\n//           onChange={this.handleChange(\"title\")}\r\n//           type=\"text\"\r\n//           className=\"form-control\"\r\n//           value={title}\r\n//         />\r\n//       </div>\r\n//       <div className=\"form-group\">\r\n//         <label className=\"text-muted\">Message</label>\r\n//         <textarea\r\n//           onChange={this.handleChange(\"body\")}\r\n//           type=\"body\"\r\n//           className=\"form-control\"\r\n//           value={body}\r\n//         />\r\n//       </div>\r\n//       <button\r\n//         onClick={this.submitUpdate}\r\n//         type=\"submit\"\r\n//         className=\"btn btn-raised btn-primary\"\r\n//       >\r\n//         Envoyer\r\n//       </button>\r\n//     </form>\r\n//   );\r\n\r\n//   render() {\r\n//     const { title, body, id, redirectionProfile } = this.state;\r\n//     console.log('id inside render: ', id)\r\n//     console.log('user._id inside render: ', isLoggedIn().user._id)\r\n//     console.log('user inside render: ', isLoggedIn().user)\r\n//     if (redirectionProfile) {\r\n//       <Redirect to={`/user/${isLoggedIn().user._id}`} />;\r\n//     }\r\n//     return (\r\n//       <div>\r\n//         <div className=\"card-body\">\r\n//           <img\r\n//             src={`${process.env.REACT_APP_API_URI}/post/photo/${id}`}\r\n//             alt={title}\r\n//             onError={(img) => (img.target.src = `${defaultPostPic}`)}\r\n//             className=\"img-thumbnail mb-3\"\r\n//             style={{ height: \"200px\", width: \"auto\" }}\r\n//           />\r\n\r\n//           <h3 className=\"card-title mt-3 mb-3\">{title}</h3>\r\n\r\n//           {isLoggedIn().user._id === id && this.postUpdate(title, body)}\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default EditPost;\r\n\r\nclass EditPost extends Component {\r\n  constructor() {\r\n      super();\r\n      this.state = {\r\n          id: \"\",\r\n          title: \"\",\r\n          body: \"\",\r\n          redirectToProfile: false,\r\n          error: \"\",\r\n          fileSize: 0,\r\n          loading: false\r\n      };\r\n  }\r\n\r\n  init = postId => {\r\n      viewPost(postId).then(data => {\r\n          if (data.error) {\r\n              this.setState({ redirectToProfile: true });\r\n          } else {\r\n              this.setState({\r\n                  id: data.postedBy._id,\r\n                  title: data.title,\r\n                  body: data.body,\r\n                  error: \"\"\r\n              });\r\n          }\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n      this.postData = new FormData();\r\n      const postId = this.props.match.params.postId;\r\n      this.init(postId);\r\n  }\r\n\r\n  isValid = () => {\r\n      const { title, body, fileSize } = this.state;\r\n      if (fileSize > 1000000) {\r\n          this.setState({\r\n              error: \"File size should be less than 100kb\",\r\n              loading: false\r\n          });\r\n          return false;\r\n      }\r\n      if (title.length === 0 || body.length === 0) {\r\n          this.setState({ error: \"All fields are required\", loading: false });\r\n          return false;\r\n      }\r\n      return true;\r\n  };\r\n\r\n  handleChange = name => event => {\r\n      this.setState({ error: \"\" });\r\n      const value =\r\n          name === \"photo\" ? event.target.files[0] : event.target.value;\r\n\r\n      const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\r\n      this.postData.set(name, value);\r\n      this.setState({ [name]: value, fileSize });\r\n  };\r\n\r\n  clickSubmit = event => {\r\n      event.preventDefault();\r\n      this.setState({ loading: true });\r\n\r\n      if (this.isValid()) {\r\n          const postId = this.props.match.params.postId;\r\n          const token = isLoggedIn().token;\r\n\r\n          updatePost(postId, token, this.postData).then(data => {\r\n              if (data.error) this.setState({ error: data.error });\r\n              else {\r\n                  this.setState({\r\n                      loading: false,\r\n                      title: \"\",\r\n                      body: \"\",\r\n                      redirectToProfile: true\r\n                  });\r\n              }\r\n          });\r\n      }\r\n  };\r\n\r\n  editPostForm = (title, body) => (\r\n      <form>\r\n          <div className=\"form-group\">\r\n              <label className=\"text-muted\">Post Photo</label>\r\n              <input\r\n                  onChange={this.handleChange(\"photo\")}\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  className=\"form-control\"\r\n              />\r\n          </div>\r\n          <div className=\"form-group\">\r\n              <label className=\"text-muted\">Title</label>\r\n              <input\r\n                  onChange={this.handleChange(\"title\")}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={title}\r\n              />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n              <label className=\"text-muted\">Body</label>\r\n              <textarea\r\n                  onChange={this.handleChange(\"body\")}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={body}\r\n              />\r\n          </div>\r\n\r\n          <button\r\n              onClick={this.clickSubmit}\r\n              className=\"btn btn-raised btn-primary\"\r\n          >\r\n              Update Post\r\n          </button>\r\n      </form>\r\n  );\r\n\r\n  render() {\r\n      const {\r\n          id,\r\n          title,\r\n          body,\r\n          redirectToProfile,\r\n          error,\r\n          loading\r\n      } = this.state;\r\n\r\n      if (redirectToProfile) {\r\n          return <Redirect to={`/user/${isLoggedIn().user._id}`} />;\r\n      }\r\n\r\n      return (\r\n          <div className=\"container\">\r\n              <h2 className=\"mt-5 mb-5\">{title}</h2>\r\n\r\n              <div\r\n                  className=\"alert alert-danger\"\r\n                  style={{ display: error ? \"\" : \"none\" }}\r\n              >\r\n                  {error}\r\n              </div>\r\n\r\n              {loading ? (\r\n                  <div className=\"jumbotron text-center\">\r\n                      <h2>Loading...</h2>\r\n                  </div>\r\n              ) : (\r\n                  \"\"\r\n              )}\r\n\r\n              <img\r\n                  style={{ height: \"200px\", width: \"auto\" }}\r\n                  className=\"img-thumbnail\"\r\n                  src={`${\r\n                      process.env.REACT_APP_API_URL\r\n                  }/post/photo/${id}`}\r\n                  onError={i => (i.target.src = `${defaultPostPic}`)}\r\n                  alt={title}\r\n              />\r\n\r\n              {/* {isLoggedIn().user.role === \"admin\" &&\r\n                  this.editPostForm(title, body)} */}\r\n\r\n              {isLoggedIn().user._id === id &&\r\n                  this.editPostForm(title, body)}\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default EditPost;\r\n"]},"metadata":{},"sourceType":"module"}