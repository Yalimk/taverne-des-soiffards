{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\virtuoworks\\\\Desktop\\\\taverne-des-soiffards\\\\front-end\\\\src\\\\components\\\\post\\\\WriteComment.jsx\";\n// Native modules import\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\"; // Personal modules import\n\nimport { writeComment, deleteComment } from \"../../logic/post/apiPost\";\nimport { isLoggedIn } from \"../../logic/auth/index\";\nimport defaultProfilePic from \"../../images/default-image.png\";\n\nclass WriteComment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: \"\" // error: \"\",\n\n    };\n\n    this.handleChange = event => {\n      // this.setState({\n      //   error: \"\",\n      // });\n      this.setState({\n        message: event.target.value\n      });\n    };\n\n    this.addComment = async event => {\n      event.preventDefault();\n\n      const userId = isLoggedIn().user._id;\n\n      const token = isLoggedIn().token;\n      const postId = this.props.postId;\n      const comment = {\n        message: this.state.message\n      }; // if (this.isValid()) {\n\n      try {\n        const response = await writeComment(userId, token, postId, comment);\n\n        if (response.error) {\n          console.log(`[front-end/src/components/post/WriteComment.jsx => addComment] : response.error: ${JSON.stringify(response.error)}`);\n        } else {\n          this.setState({\n            message: \"\"\n          });\n          this.props.updateComments(response.comments);\n        }\n      } catch (error) {\n        console.error(`[front-end/src/components/post/WriteComment.jsx => addComment] : error: ${error}`);\n      } // } else {\n      //   console.error(`[front-end/src/components/post/WriteComment.jsx => addComment] : The validation didn't go through.`)\n      // }\n\n    };\n  }\n\n  // removeComment = (comment) => {\n  //   const userId = isLoggedIn().user._id;\n  //   const token = isLoggedIn().token;\n  //   const postId = this.props.postId;\n  //   deleteComment(userId, token, postId, comment).then(data => {\n  //     if (data.error) {\n  //         console.log(data.error);\n  //     } else {\n  //         this.props.updateComments(data.comments);\n  //     }\n  //   });\n  // };\n  //   deleteConfirmation = comment => {\n  //     let answer = window.confirm(\n  //       \"Es-tu sÃ»r de vouloir supprimer ton message, pirate ?\"\n  //     );\n  //     if (answer) {\n  //       this.deleteComment(comment);\n  //     }\n  // };\n  render() {\n    const {\n      comments\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-5\",\n        children: \"Donne ton avis sur ce message, moussaillon !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          onSubmit: this.addComment,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            onChange: this.handleChange,\n            placeholder: \"Ecris ici ton avis...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-primary\",\n          children: [comments.length, \" Commentaires\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), comments.map((comment, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            style: {\n              padding: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                borderRadius: \"50%\",\n                border: \"1px solid black\"\n              },\n              className: \"float-left mr-2\",\n              height: \"30px\",\n              width: \"30px\",\n              onError: i => i.target.src = `${defaultProfilePic}`,\n              src: `${process.env.REACT_APP_API_URI}/user/photo/${comment.author._id}`,\n              alt: comment.author.pseudo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"lead\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/user/${comment.author._id}`,\n                children: [comment.author.pseudo, \" :\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this), comment.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default WriteComment;","map":{"version":3,"sources":["C:/Users/virtuoworks/Desktop/taverne-des-soiffards/front-end/src/components/post/WriteComment.jsx"],"names":["React","Component","Link","writeComment","deleteComment","isLoggedIn","defaultProfilePic","WriteComment","state","message","handleChange","event","setState","target","value","addComment","preventDefault","userId","user","_id","token","postId","props","comment","response","error","console","log","JSON","stringify","updateComments","comments","render","length","map","i","padding","borderRadius","border","src","process","env","REACT_APP_API_URI","author","pseudo"],"mappings":"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","sourcesContent":["// Native modules import\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Personal modules import\r\nimport { writeComment, deleteComment } from \"../../logic/post/apiPost\";\r\nimport { isLoggedIn } from \"../../logic/auth/index\";\r\nimport defaultProfilePic from \"../../images/default-image.png\";\r\n\r\nclass WriteComment extends Component {\r\n  state = {\r\n    message: \"\",\r\n    // error: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    // this.setState({\r\n    //   error: \"\",\r\n    // });\r\n    this.setState({\r\n      message: event.target.value,\r\n    });\r\n  };\r\n\r\n  // isValid = () => {\r\n  //   const { message } = this.state;\r\n  //   if (!message.length > 0 || message.length > 300) {\r\n  //     this.setState({\r\n  //       error:\r\n  //         \"Ton commentaire doit Ãªtre d'au moins 1 caractÃ¨re et d'au plus 300 caractÃ¨res, moussaillon !\",\r\n  //     });\r\n  //     return false;\r\n  //   }\r\n  //   return true;\r\n  // };\r\n\r\n  addComment = async (event) => {\r\n    event.preventDefault();\r\n    const userId = isLoggedIn().user._id;\r\n    const token = isLoggedIn().token;\r\n    const postId = this.props.postId;\r\n    const comment = { message: this.state.message };\r\n\r\n    // if (this.isValid()) {\r\n    try {\r\n      const response = await writeComment(userId, token, postId, comment);\r\n      if (response.error) {\r\n        console.log(\r\n          `[front-end/src/components/post/WriteComment.jsx => addComment] : response.error: ${JSON.stringify(\r\n            response.error\r\n          )}`\r\n        );\r\n      } else {\r\n        this.setState({\r\n          message: \"\",\r\n        });\r\n        this.props.updateComments(response.comments);\r\n      }\r\n    } catch (error) {\r\n      console.error(\r\n        `[front-end/src/components/post/WriteComment.jsx => addComment] : error: ${error}`\r\n      );\r\n    }\r\n    // } else {\r\n    //   console.error(`[front-end/src/components/post/WriteComment.jsx => addComment] : The validation didn't go through.`)\r\n    // }\r\n  };\r\n\r\n  // removeComment = (comment) => {\r\n  //   const userId = isLoggedIn().user._id;\r\n  //   const token = isLoggedIn().token;\r\n  //   const postId = this.props.postId;\r\n\r\n  //   deleteComment(userId, token, postId, comment).then(data => {\r\n  //     if (data.error) {\r\n  //         console.log(data.error);\r\n  //     } else {\r\n  //         this.props.updateComments(data.comments);\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  //   deleteConfirmation = comment => {\r\n  //     let answer = window.confirm(\r\n  //       \"Es-tu sÃ»r de vouloir supprimer ton message, pirate ?\"\r\n  //     );\r\n  //     if (answer) {\r\n  //       this.deleteComment(comment);\r\n  //     }\r\n  // };\r\n\r\n  render() {\r\n    const { comments } = this.props;\r\n    return (\r\n      <div className=\"container jumbotron\">\r\n        <h2 className=\"mb-5\">Donne ton avis sur ce message, moussaillon !</h2>\r\n        <div className=\"form-group\">\r\n          <form action=\"\" onSubmit={this.addComment}>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              onChange={this.handleChange}\r\n              placeholder=\"Ecris ici ton avis...\"\r\n            />\r\n          </form>\r\n        </div>\r\n        {/* {JSON.stringify(comments)} */}\r\n        <div className=\"col-md-12\">\r\n          <h3 className=\"text-primary\">{comments.length} Commentaires</h3>\r\n          <hr />\r\n          {comments.map((comment, i) => (\r\n            <div className=\"row\" key={i}>\r\n              <div className=\"col-md-12\" style={{ padding: 0 }}>\r\n                <img\r\n                  style={{\r\n                    borderRadius: \"50%\",\r\n                    border: \"1px solid black\",\r\n                  }}\r\n                  className=\"float-left mr-2\"\r\n                  height=\"30px\"\r\n                  width=\"30px\"\r\n                  onError={(i) => (i.target.src = `${defaultProfilePic}`)}\r\n                  src={`${process.env.REACT_APP_API_URI}/user/photo/${comment.author._id}`}\r\n                  alt={comment.author.pseudo}\r\n                />\r\n                <p className=\"lead\">\r\n                  <Link to={`/user/${comment.author._id}`}>\r\n                    {comment.author.pseudo} :{\" \"}\r\n                  </Link>\r\n                  {comment.message}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WriteComment;\r\n"]},"metadata":{},"sourceType":"module"}