{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\virtuoworks\\\\Desktop\\\\taverne-des-soiffards\\\\front-end\\\\src\\\\user\\\\EditProfile.jsx\";\n\n/* eslint-disable no-useless-escape */\n// Navite modules import\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\"; // Personal modules import\n\nimport { isLoggedIn } from \"../auth/index\";\nimport { read, updateUser } from \"./apiUser\"; // import { signout } from '../auth/index';\n\nclass EditProfile extends Component {\n  constructor() {\n    super();\n\n    this.init = async userId => {\n      let token;\n\n      try {\n        token = isLoggedIn().token;\n      } catch (error) {\n        console.error(`Couldn't retrieve token because of error: ${error}.`);\n      }\n\n      if (token) {\n        let data;\n\n        try {\n          data = await read(userId, token);\n        } catch (error) {\n          console.error(`Couldn't retrieve data because of error: ${error}.`);\n        }\n\n        if (data.error) {\n          try {\n            this.setState = {\n              redirectionProfile: true\n            };\n          } catch (error) {\n            console.error(`Couldn't set state of redirectionProfile.`);\n          }\n        } else {\n          try {\n            this.setState({\n              id: data._id,\n              pseudo: data.pseudo,\n              email: data.email,\n              error: \"\"\n            });\n          } catch (error) {\n            console.error(`Couldn't change the value of the state.`);\n          }\n        }\n      } else {\n        console.error(`Token inside init method is ${typeof token}.`);\n      }\n    };\n\n    this.handleChange = name => event => {\n      const value = name === 'photo' ? event.target.files[0] : event.target.value;\n      this.userData.set(name, value);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.isValid = () => {\n      const {\n        pseudo,\n        email,\n        password\n      } = this.state;\n\n      if (pseudo.length === 0 && email.length === 0 && password.length === 0) {\n        this.setState({\n          error: \"Il n'y a rien à changer, là, moussaillon !\"\n        });\n        return false;\n      } else {\n        if (pseudo.length >= 1 && (pseudo.length < 4 || pseudo.length > 30)) {\n          this.setState({\n            error: \"Ton pseudo doit faire entre 4 et 30 caractères, marin d'eau douce !\"\n          });\n          return false;\n        }\n\n        if (password.length >= 1 && !/^(?=(?:[^A-Z]*[A-Z]){1,}(?![^A-Z]*[A-Z]))(?=(?:[^a-z]*[a-z]){1,}(?![^a-z]*[a-z]))(?=(?:[^0-9]*[0-9]){1,}(?![^0-9]*[0-9]))(?=(?:[^!'#\\$%&'\\(\\)\\*\\+,-\\.\\/:;<=>\\?@[\\]\\^_`\\{\\|}~]*[!'#\\$%&'\\(\\)\\*\\+,-\\.\\/:;<=>\\?@[\\]\\^_`\\{\\|}~]){1,}(?![^!'#\\$%&'\\(\\)\\*\\+,-\\.\\/:;<=>\\?@[\\]\\^_`\\{\\|}~]*[!'#\\$%&'\\(\\)\\*\\+,-\\.\\/:;<=>\\?@[\\]\\^_`\\{\\|}~])).{8,}$/.test(password)) {\n          this.setState({\n            error: \"Ton mot de passe doit contenir au moins 8 caractères dont une lettre minuscule, une lettre majuscule, un chiffre et un caractère spécial.\"\n          });\n          return false;\n        }\n\n        if (email.length >= 1 && !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n          this.setState({\n            error: \"Tu dois renseigner une adresse de courrier électronique valide, moussailon !\"\n          });\n          return false;\n        }\n\n        return true;\n      }\n    };\n\n    this.updateSubmit = async event => {\n      event.preventDefault();\n\n      if (this.isValid()) {\n        const {\n          pseudo,\n          email,\n          password\n        } = this.state;\n        const user = {\n          pseudo: pseudo || undefined,\n          email: email || undefined,\n          password: password || undefined\n        };\n        const userId = this.props.match.params.userId;\n        const token = isLoggedIn().token;\n        let response;\n\n        try {\n          response = await updateUser(userId, token, this.userData);\n        } catch (error) {\n          console.error(`Encore une erreur à la con...`);\n        }\n\n        if (response.error) {\n          this.setState({\n            error: response.error\n          });\n        } else {\n          this.setState({\n            redirectionProfile: true\n          });\n        }\n      }\n    };\n\n    this.updateForm = (pseudo, email, password) => {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Name\",\n            className: \"text-muted\",\n            children: \"Photo de profil (ou de face...)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange(\"photo\"),\n            type: \"file\",\n            accept: \"image/*\",\n            className: \"form-control\",\n            placeholder: \"Laisser vide pour conserver le pseudo actuel.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Name\",\n            className: \"text-muted\",\n            children: \"Pseudo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange(\"pseudo\"),\n            type: \"text\",\n            className: \"form-control\",\n            value: pseudo,\n            placeholder: \"Laisser vide pour conserver le pseudo actuel.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Email\",\n            className: \"text-muted\",\n            children: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange(\"email\"),\n            type: \"email\",\n            className: \"form-control\",\n            value: email,\n            placeholder: \"Laisser vide pour conserver l'e-mail actuel.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            id: \"emailHelp\",\n            className: \"form-text text-muted\",\n            children: \"Votre e-mail ne sera partag\\xE9 avec aucune tierse partie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Password\",\n            className: \"text-muted\",\n            children: \"Mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange(\"password\"),\n            type: \"password\",\n            className: \"form-control\",\n            value: password,\n            placeholder: \"Laisser vide pour conserver le mot de passe actuel.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.updateSubmit,\n          type: \"submit\",\n          className: \"btn btn-raised btn-primary\",\n          children: \"Modifier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      id: \"\",\n      pseudo: \"\",\n      email: \"\",\n      password: \"\",\n      redirectionProfile: false,\n      error: \"\"\n    };\n  }\n\n  render() {\n    const {\n      id,\n      pseudo,\n      email,\n      password,\n      redirectionProfile,\n      error\n    } = this.state;\n\n    if (redirectionProfile) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/user/${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-5 mb-5\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning\",\n        style: {\n          display: error ? \"\" : \"none\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), this.updateForm(pseudo, email, password)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidMount() {\n    this.userData = new FormData();\n\n    try {\n      const userId = this.props.match.params.userId;\n\n      if (userId) {\n        this.init(userId);\n      } else {\n        console.error(\"No userId found.\");\n      }\n    } catch (error) {\n      console.error(\"Something went wrong with componentDidMount method.\");\n    }\n  }\n\n}\n\nexport default EditProfile;","map":{"version":3,"sources":["C:/Users/virtuoworks/Desktop/taverne-des-soiffards/front-end/src/user/EditProfile.jsx"],"names":["React","Component","Redirect","isLoggedIn","read","updateUser","EditProfile","constructor","init","userId","token","error","console","data","setState","redirectionProfile","id","_id","pseudo","email","handleChange","name","event","value","target","files","userData","set","isValid","password","state","length","test","updateSubmit","preventDefault","user","undefined","props","match","params","response","updateForm","render","display","componentDidMount","FormData"],"mappings":"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","sourcesContent":["/* eslint-disable no-useless-escape */\r\n// Navite modules import\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n// Personal modules import\r\nimport { isLoggedIn } from \"../auth/index\";\r\nimport { read, updateUser } from \"./apiUser\";\r\n// import { signout } from '../auth/index';\r\n\r\nclass EditProfile extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      pseudo: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      redirectionProfile: false,\r\n      error: \"\",\r\n    };\r\n  }\r\n\r\n  init = async (userId) => {\r\n    let token;\r\n    try {\r\n      token = isLoggedIn().token;\r\n    } catch (error) {\r\n      console.error(`Couldn't retrieve token because of error: ${error}.`);\r\n    }\r\n    if (token) {\r\n      let data;\r\n      try {\r\n        data = await read(userId, token);\r\n      } catch (error) {\r\n        console.error(`Couldn't retrieve data because of error: ${error}.`);\r\n      }\r\n      if (data.error) {\r\n        try {\r\n          this.setState = {\r\n            redirectionProfile: true,\r\n          };\r\n        } catch (error) {\r\n          console.error(`Couldn't set state of redirectionProfile.`);\r\n        }\r\n      } else {\r\n        try {\r\n          this.setState({\r\n            id: data._id,\r\n            pseudo: data.pseudo,\r\n            email: data.email,\r\n            error: \"\",\r\n          });\r\n        } catch (error) {\r\n          console.error(`Couldn't change the value of the state.`);\r\n        }\r\n      }\r\n    } else {\r\n      console.error(`Token inside init method is ${typeof token}.`);\r\n    }\r\n  };\r\n\r\n  handleChange = (name) => (event) => {\r\n    const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n    this.userData.set(name, value);\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  isValid = () => {\r\n    const { pseudo, email, password } = this.state;\r\n    if (pseudo.length === 0 && email.length === 0 && password.length === 0) {\r\n      this.setState({ error: \"Il n'y a rien à changer, là, moussaillon !\" });\r\n      return false;\r\n    } else {\r\n      if (pseudo.length >= 1 && (pseudo.length < 4 || pseudo.length > 30)) {\r\n        this.setState({\r\n          error:\r\n            \"Ton pseudo doit faire entre 4 et 30 caractères, marin d'eau douce !\",\r\n        });\r\n        return false;\r\n      }\r\n      if (\r\n        password.length >= 1 &&\r\n        !/^(?=(?:[^A-Z]*[A-Z]){1,}(?![^A-Z]*[A-Z]))(?=(?:[^a-z]*[a-z]){1,}(?![^a-z]*[a-z]))(?=(?:[^0-9]*[0-9]){1,}(?![^0-9]*[0-9]))(?=(?:[^!'#\\$%&'\\(\\)\\*\\+,-\\.\\/:;<=>\\?@[\\]\\^_`\\{\\|}~]*[!'#\\$%&'\\(\\)\\*\\+,-\\.\\/:;<=>\\?@[\\]\\^_`\\{\\|}~]){1,}(?![^!'#\\$%&'\\(\\)\\*\\+,-\\.\\/:;<=>\\?@[\\]\\^_`\\{\\|}~]*[!'#\\$%&'\\(\\)\\*\\+,-\\.\\/:;<=>\\?@[\\]\\^_`\\{\\|}~])).{8,}$/.test(\r\n          password\r\n        )\r\n      ) {\r\n        this.setState({\r\n          error:\r\n            \"Ton mot de passe doit contenir au moins 8 caractères dont une lettre minuscule, une lettre majuscule, un chiffre et un caractère spécial.\",\r\n        });\r\n        return false;\r\n      }\r\n      if (\r\n        email.length >= 1 &&\r\n        !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n          email\r\n        )\r\n      ) {\r\n        this.setState({\r\n          error:\r\n            \"Tu dois renseigner une adresse de courrier électronique valide, moussailon !\",\r\n        });\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n  };\r\n\r\n  updateSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (this.isValid()) {\r\n      const { pseudo, email, password } = this.state;\r\n      const user = {\r\n        pseudo: pseudo || undefined,\r\n        email: email || undefined,\r\n        password: password || undefined,\r\n      };\r\n      const userId = this.props.match.params.userId;\r\n      const token = isLoggedIn().token;\r\n      let response;\r\n      try {\r\n        response = await updateUser(userId, token, this.userData);\r\n      } catch (error) {\r\n        console.error(`Encore une erreur à la con...`);\r\n      }\r\n      if (response.error) {\r\n        this.setState({ error: response.error });\r\n      } else {\r\n        this.setState({ redirectionProfile: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  updateForm = (pseudo, email, password) => {\r\n    return (\r\n      <form action=\"\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Name\" className=\"text-muted\">\r\n            Photo de profil (ou de face...)\r\n          </label>\r\n          <input\r\n            onChange={this.handleChange(\"photo\")}\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            className=\"form-control\"\r\n            placeholder=\"Laisser vide pour conserver le pseudo actuel.\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Name\" className=\"text-muted\">\r\n            Pseudo\r\n          </label>\r\n          <input\r\n            onChange={this.handleChange(\"pseudo\")}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={pseudo}\r\n            placeholder=\"Laisser vide pour conserver le pseudo actuel.\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Email\" className=\"text-muted\">\r\n            E-mail\r\n          </label>\r\n          <input\r\n            onChange={this.handleChange(\"email\")}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            value={email}\r\n            placeholder=\"Laisser vide pour conserver l'e-mail actuel.\"\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Votre e-mail ne sera partagé avec aucune tierse partie\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Password\" className=\"text-muted\">\r\n            Mot de passe\r\n          </label>\r\n          <input\r\n            onChange={this.handleChange(\"password\")}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            value={password}\r\n            placeholder=\"Laisser vide pour conserver le mot de passe actuel.\"\r\n          />\r\n        </div>\r\n        <button\r\n          onClick={this.updateSubmit}\r\n          type=\"submit\"\r\n          className=\"btn btn-raised btn-primary\"\r\n        >\r\n          Modifier\r\n        </button>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      pseudo,\r\n      email,\r\n      password,\r\n      redirectionProfile,\r\n      error,\r\n    } = this.state;\r\n    if (redirectionProfile) {\r\n      return <Redirect to={`/user/${id}`} />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h2 className=\"mt-5 mb-5\">Edit Profile</h2>\r\n        <div\r\n          className=\"alert alert-warning\"\r\n          style={{ display: error ? \"\" : \"none\" }}\r\n        >\r\n          {error}\r\n        </div>\r\n        {this.updateForm(pseudo, email, password)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.userData = new FormData();\r\n    try {\r\n      const userId = this.props.match.params.userId;\r\n      if (userId) {\r\n        this.init(userId);\r\n      } else {\r\n        console.error(\"No userId found.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Something went wrong with componentDidMount method.\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default EditProfile;\r\n"]},"metadata":{},"sourceType":"module"}