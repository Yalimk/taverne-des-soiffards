{"ast":null,"code":"export const signup = async newUser => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URI}/signup`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newUser)\n    });\n    return await res.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const signin = async user => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URI}/signin`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    return await res.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const signout = async redirect => {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"jwt\");\n    redirect();\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/signout`, {\n      method: \"GET\"\n    });\n    return response.json({\n      message: \"User disconnected\"\n    });\n  }\n};\nexport const logUserIn = (jwt, redirect) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"jwt\", JSON.stringify(jwt));\n  }\n\n  redirect();\n};\nexport const isLoggedIn = () => {\n  if (typeof window === \"undefined\") {\n    return false;\n  }\n\n  if (localStorage.getItem(\"jwt\")) {\n    // console.log(`[front-end/src/auth/index.js => isLoggedIn:58] : localStorage.getItem(\"jwt\"): `, localStorage.getItem(\"jwt\"))\n    return JSON.parse(localStorage.getItem(\"jwt\"));\n  } else {\n    return false;\n  }\n};\nexport const forgotPassword = async email => {\n  console.info(`[front-end/auth/index.js => forgotPassword:67] : email: ${email}`);\n\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/forgot-password/`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    console.log('[front-end/auth/index.js => forgotPassword:81] : response: ', response);\n    return response.json();\n  } catch (error) {\n    console.error(`[front-end/src/auth/index.js => forgotPassword:85] : error: ${error}.`);\n  }\n};\nexport const resetPassword = async newCredentials => {\n  // console.log(`[front-end/auth/index.js => resetPassword:91] : newCredentials: ${JSON.stringify(newCredentials)}`)\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/reset-password/`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newCredentials)\n    }); // console.log(`[front-end/auth/index.js => resetPassword:101] : response: ${response}`);\n\n    return await response.json();\n  } catch (error) {\n    console.error(`[front-end/auth/index.js => resetPassword:101] : error: ${error}.`);\n  }\n}; // export const resetPassword = async resetInfo => {\n//   try {\n//     const response = await fetch(`${process.env.REACT_APP_API_URI}/reset-password/`, {\n//       method: \"PUT\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\"\n//       },\n//       body: JSON.stringify(resetInfo)\n//     });\n//     console.log(\"forgot password response: \", response);\n//     return await response.json();\n//   } catch (err) {\n//     return console.log(err);\n//   }\n// };","map":{"version":3,"sources":["C:/Users/virtuoworks/Desktop/taverne-des-soiffards/front-end/src/components/auth/index.js"],"names":["signup","newUser","res","fetch","process","env","REACT_APP_API_URI","method","headers","Accept","body","JSON","stringify","json","err","console","log","signin","user","signout","redirect","window","localStorage","removeItem","response","message","logUserIn","jwt","setItem","isLoggedIn","getItem","parse","forgotPassword","email","info","error","resetPassword","newCredentials"],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAG,MAAOC,OAAP,IAAmB;AACvC,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,SAAlC,EAA4C;AACjEC,MAAAA,MAAM,EAAE,MADyD;AAEjEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFwD;AAMjEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,OAAf;AAN2D,KAA5C,CAAvB;AAQA,WAAO,MAAMC,GAAG,CAACW,IAAJ,EAAb;AACD,GAVD,CAUE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAdM;AAgBP,OAAO,MAAMG,MAAM,GAAG,MAAOC,IAAP,IAAgB;AACpC,MAAI;AACF,UAAMhB,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,SAAlC,EAA4C;AACjEC,MAAAA,MAAM,EAAE,MADyD;AAEjEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFwD;AAMjEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeM,IAAf;AAN2D,KAA5C,CAAvB;AAQA,WAAO,MAAMhB,GAAG,CAACW,IAAJ,EAAb;AACD,GAVD,CAUE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAdM;AAgBP,OAAO,MAAMK,OAAO,GAAG,MAAOC,QAAP,IAAoB;AACzC,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjCC,IAAAA,YAAY,CAACC,UAAb,CAAwB,KAAxB;AACAH,IAAAA,QAAQ;AACR,UAAMI,QAAQ,GAAG,MAAMrB,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,UAAlC,EAA6C;AACvEC,MAAAA,MAAM,EAAE;AAD+D,KAA7C,CAA5B;AAGA,WAAOiB,QAAQ,CAACX,IAAT,CAAc;AACnBY,MAAAA,OAAO,EAAE;AADU,KAAd,CAAP;AAGD;AACF,CAXM;AAaP,OAAO,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMP,QAAN,KAAmB;AAC1C,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjCC,IAAAA,YAAY,CAACM,OAAb,CAAqB,KAArB,EAA4BjB,IAAI,CAACC,SAAL,CAAee,GAAf,CAA5B;AACD;;AACDP,EAAAA,QAAQ;AACT,CALM;AAOP,OAAO,MAAMS,UAAU,GAAG,MAAM;AAC9B,MAAI,OAAOR,MAAP,KAAkB,WAAtB,EAAmC;AACjC,WAAO,KAAP;AACD;;AACD,MAAIC,YAAY,CAACQ,OAAb,CAAqB,KAArB,CAAJ,EAAiC;AAC/B;AACA,WAAOnB,IAAI,CAACoB,KAAL,CAAWT,YAAY,CAACQ,OAAb,CAAqB,KAArB,CAAX,CAAP;AACD,GAHD,MAGO;AACL,WAAO,KAAP;AACD;AACF,CAVM;AAYP,OAAO,MAAME,cAAc,GAAG,MAAOC,KAAP,IAAiB;AAC7ClB,EAAAA,OAAO,CAACmB,IAAR,CACG,2DAA0DD,KAAM,EADnE;;AAGA,MAAI;AACF,UAAMT,QAAQ,GAAG,MAAMrB,KAAK,CACzB,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,mBADP,EAE1B;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFX;AAMEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEqB,QAAAA;AAAF,OAAf;AANR,KAF0B,CAA5B;AAWAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,6DAAZ,EAA2EQ,QAA3E;AACA,WAAOA,QAAQ,CAACX,IAAT,EAAP;AACD,GAdD,CAcE,OAAOsB,KAAP,EAAc;AACdpB,IAAAA,OAAO,CAACoB,KAAR,CACG,+DAA8DA,KAAM,GADvE;AAGD;AACF,CAvBM;AAyBP,OAAO,MAAMC,aAAa,GAAG,MAAOC,cAAP,IAA0B;AACrD;AACA,MAAI;AACF,UAAMb,QAAQ,GAAG,MAAMrB,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,kBAAlC,EAAqD;AAC/EC,MAAAA,MAAM,EAAE,KADuE;AAE/EC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFsE;AAM/EC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeyB,cAAf;AANyE,KAArD,CAA5B,CADE,CASF;;AACA,WAAO,MAAMb,QAAQ,CAACX,IAAT,EAAb;AACD,GAXD,CAWE,OAAOsB,KAAP,EAAc;AACdpB,IAAAA,OAAO,CAACoB,KAAR,CAAe,2DAA0DA,KAAM,GAA/E;AACD;AACF,CAhBM,C,CAkBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export const signup = async (newUser) => {\r\n  try {\r\n    const res = await fetch(`${process.env.REACT_APP_API_URI}/signup`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(newUser),\r\n    });\r\n    return await res.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const signin = async (user) => {\r\n  try {\r\n    const res = await fetch(`${process.env.REACT_APP_API_URI}/signin`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    });\r\n    return await res.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const signout = async (redirect) => {\r\n  if (typeof window !== \"undefined\") {\r\n    localStorage.removeItem(\"jwt\");\r\n    redirect();\r\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/signout`, {\r\n      method: \"GET\",\r\n    });\r\n    return response.json({\r\n      message: \"User disconnected\",\r\n    });\r\n  }\r\n};\r\n\r\nexport const logUserIn = (jwt, redirect) => {\r\n  if (typeof window !== \"undefined\") {\r\n    localStorage.setItem(\"jwt\", JSON.stringify(jwt));\r\n  }\r\n  redirect();\r\n};\r\n\r\nexport const isLoggedIn = () => {\r\n  if (typeof window === \"undefined\") {\r\n    return false;\r\n  }\r\n  if (localStorage.getItem(\"jwt\")) {\r\n    // console.log(`[front-end/src/auth/index.js => isLoggedIn:58] : localStorage.getItem(\"jwt\"): `, localStorage.getItem(\"jwt\"))\r\n    return JSON.parse(localStorage.getItem(\"jwt\"));\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const forgotPassword = async (email) => {\r\n  console.info(\r\n    `[front-end/auth/index.js => forgotPassword:67] : email: ${email}`\r\n  );\r\n  try {\r\n    const response = await fetch(\r\n      `${process.env.REACT_APP_API_URI}/forgot-password/`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      }\r\n    );\r\n    console.log('[front-end/auth/index.js => forgotPassword:81] : response: ', response);\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error(\r\n      `[front-end/src/auth/index.js => forgotPassword:85] : error: ${error}.`\r\n    );\r\n  }\r\n};\r\n\r\nexport const resetPassword = async (newCredentials) => {\r\n  // console.log(`[front-end/auth/index.js => resetPassword:91] : newCredentials: ${JSON.stringify(newCredentials)}`)\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/reset-password/`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(newCredentials)\r\n    });\r\n    // console.log(`[front-end/auth/index.js => resetPassword:101] : response: ${response}`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`[front-end/auth/index.js => resetPassword:101] : error: ${error}.`)\r\n  }\r\n};\r\n\r\n// export const resetPassword = async resetInfo => {\r\n//   try {\r\n//     const response = await fetch(`${process.env.REACT_APP_API_URI}/reset-password/`, {\r\n//       method: \"PUT\",\r\n//       headers: {\r\n//         Accept: \"application/json\",\r\n//         \"Content-Type\": \"application/json\"\r\n//       },\r\n//       body: JSON.stringify(resetInfo)\r\n//     });\r\n//     console.log(\"forgot password response: \", response);\r\n//     return await response.json();\r\n//   } catch (err) {\r\n//     return console.log(err);\r\n//   }\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}