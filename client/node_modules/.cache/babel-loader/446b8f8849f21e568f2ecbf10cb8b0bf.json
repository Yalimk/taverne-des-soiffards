{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\virtuoworks\\\\Desktop\\\\taverne-des-soiffards\\\\front-end\\\\src\\\\post\\\\EditPost.jsx\";\n// Native modules import\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\"; // Personal modules import\n\nimport { isLoggedIn } from \"../auth/index\";\nimport { viewPost, updatePost } from \"./apiPost\";\nimport defaultPostPic from \"../images/beautiful-sea.jpg\";\n\nclass EditPost extends Component {\n  constructor() {\n    super();\n\n    this.init = async postId => {\n      console.info(`postId dans la méthode init de EditPost : ${postId}`);\n\n      try {\n        const data = await viewPost(postId);\n\n        if (data.error) {\n          // console.error(\"dans le If data.error de init dans EditPost\");\n          this.setState({\n            redirectionProfile: true\n          });\n        } else {\n          console.info(`data.author._id dans la méthode init de EditPost : ${data.author._id}`);\n          this.setState({\n            id: data._id,\n            title: data.title,\n            body: data.body,\n            error: \"\"\n          });\n        }\n      } catch (error) {\n        console.error(`The init method inside EditPost encountered the following error: ${error}`);\n      }\n    };\n\n    this.isValid = () => {\n      const {\n        title,\n        body\n        /*, fileSize*/\n\n      } = this.state; // if (fileSize > 1000000) {\n      //   this.setState({\n      //     loading: false,\n      //     error: \"Le poids du fichier ne doit pas dépasser 1Mb ! Déconne pas !\",\n      //   });\n      //   return false;\n      // }\n\n      if (title.length === 0 || title.length > 50) {\n        this.setState({\n          loading: false,\n          error: \"Le titre est requis et doit faire moins de 50 caractères, marin d'eau douce !\"\n        });\n        return false;\n      }\n\n      if (body.length === 0) {\n        this.setState({\n          loading: false,\n          error: `Un message est requis pour envoyer un... message, moussaillon.`\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        error: \"\"\n      });\n      const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n      const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\n      this.postData.set(name, value);\n      this.setState({\n        [name]: value,\n        fileSize\n      });\n    };\n\n    this.submitUpdate = async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      if (this.isValid()) {\n        const postId = this.props.match.params.postId;\n        const token = isLoggedIn().token;\n\n        try {\n          const data = await updatePost(postId, token, this.postData);\n\n          if (data.error) {\n            this.setState({\n              error: data.error\n            });\n          } else {\n            this.setState({\n              loading: false,\n              title: \"\",\n              body: \"\",\n              redirectionProfile: true\n            });\n          }\n        } catch (error) {\n          console.error(`updatePost in EditPost coudldn't retrive data because of error: ${error}.`);\n        }\n      }\n    };\n\n    this.postUpdateForm = (title, body) => /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Titre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange(\"title\"),\n          type: \"text\",\n          className: \"form-control\",\n          value: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: this.handleChange(\"body\"),\n          type: \"body\",\n          className: \"form-control\",\n          value: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.submitUpdate,\n        className: \"btn btn-raised btn-primary\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }, this);\n\n    this.state = {\n      id: \"\",\n      title: \"\",\n      body: \"\",\n      redirectionProfile: false,\n      error: \"\",\n      loading: false // fileSize: 0,\n\n    };\n  }\n\n  componentDidMount() {\n    this.postData = new FormData();\n\n    try {\n      const postId = this.props.match.params.postId;\n\n      if (postId) {\n        this.init(postId);\n      } else {\n        console.error(\"No postId found.\");\n      }\n    } catch (error) {\n      console.error(\"Something went wrong with componentDidMount method.\");\n    }\n  }\n\n  render() {\n    const {\n      id,\n      title,\n      body,\n      redirectionProfile,\n      error,\n      loading\n    } = this.state; // console.log(\"id inside render: \", id);\n    // console.log(\"user._id inside render: \", isLoggedIn().user._id);\n    // console.log(\"user inside render: \", isLoggedIn().user);\n\n    if (redirectionProfile) {\n      // console.log(`redirection vers /user/${isLoggedIn().user._id}` );\n\n      /*#__PURE__*/\n      _jsxDEV(Redirect, {\n        to: `/user/${isLoggedIn().user._id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          style: {\n            display: error ? \"\" : \"none\"\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jumbotron text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            height: \"200px\",\n            width: \"auto\"\n          },\n          className: \"img-thumbnail mb-3\",\n          src: `${defaultPostPic}` // src={`${process.env.REACT_APP_API_URI}/post/photo/${id}`}\n          // onError={(img) => (img.target.src = `${defaultPostPic}`)}\n          ,\n          alt: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title mt-3 mb-3\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), this.postUpdateForm(title, body)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default EditPost;","map":{"version":3,"sources":["C:/Users/virtuoworks/Desktop/taverne-des-soiffards/front-end/src/post/EditPost.jsx"],"names":["React","Component","Redirect","isLoggedIn","viewPost","updatePost","defaultPostPic","EditPost","constructor","init","postId","console","info","data","error","setState","redirectionProfile","author","_id","id","title","body","isValid","state","length","loading","handleChange","name","event","value","target","files","fileSize","size","postData","set","submitUpdate","preventDefault","props","match","params","token","postUpdateForm","componentDidMount","FormData","render","user","display","height","width"],"mappings":"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","sourcesContent":["// Native modules import\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n// Personal modules import\r\nimport { isLoggedIn } from \"../auth/index\";\r\nimport { viewPost, updatePost } from \"./apiPost\";\r\nimport defaultPostPic from \"../images/beautiful-sea.jpg\";\r\n\r\nclass EditPost extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      title: \"\",\r\n      body: \"\",\r\n      redirectionProfile: false,\r\n      error: \"\",\r\n      loading: false,\r\n      // fileSize: 0,\r\n    };\r\n  }\r\n\r\n  init = async (postId) => {\r\n    console.info(`postId dans la méthode init de EditPost : ${postId}`);\r\n    try {\r\n      const data = await viewPost(postId);\r\n      if (data.error) {\r\n        // console.error(\"dans le If data.error de init dans EditPost\");\r\n        this.setState({\r\n          redirectionProfile: true,\r\n        });\r\n      } else {\r\n        console.info(\r\n          `data.author._id dans la méthode init de EditPost : ${data.author._id}`\r\n        );\r\n        this.setState({\r\n          id: data._id,\r\n          title: data.title,\r\n          body: data.body,\r\n          error: \"\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\r\n        `The init method inside EditPost encountered the following error: ${error}`\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.postData = new FormData();\r\n    try {\r\n      const postId = this.props.match.params.postId;\r\n      if (postId) {\r\n        this.init(postId);\r\n      } else {\r\n        console.error(\"No postId found.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Something went wrong with componentDidMount method.\");\r\n    }\r\n  }\r\n\r\n  isValid = () => {\r\n    const { title, body/*, fileSize*/ } = this.state;\r\n    // if (fileSize > 1000000) {\r\n    //   this.setState({\r\n    //     loading: false,\r\n    //     error: \"Le poids du fichier ne doit pas dépasser 1Mb ! Déconne pas !\",\r\n    //   });\r\n    //   return false;\r\n    // }\r\n    if (title.length === 0 || title.length > 50) {\r\n      this.setState({\r\n        loading: false,\r\n        error:\r\n          \"Le titre est requis et doit faire moins de 50 caractères, marin d'eau douce !\",\r\n      });\r\n      return false;\r\n    }\r\n    if (body.length === 0) {\r\n      this.setState({\r\n        loading: false,\r\n        error: `Un message est requis pour envoyer un... message, moussaillon.`,\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  handleChange = (name) => (event) => {\r\n    this.setState({ error: \"\" });\r\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n\r\n    const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\r\n    this.postData.set(name, value);\r\n    this.setState({ [name]: value, fileSize });\r\n  };\r\n\r\n  submitUpdate = async (event) => {\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n\r\n    if (this.isValid()) {\r\n      const postId = this.props.match.params.postId;\r\n      const token = isLoggedIn().token;\r\n      try {\r\n        const data = await updatePost(postId, token, this.postData);\r\n        if (data.error) {\r\n          this.setState({ error: data.error });\r\n        } else {\r\n          this.setState({\r\n            loading: false,\r\n            title: \"\",\r\n            body: \"\",\r\n            redirectionProfile: true,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(`updatePost in EditPost coudldn't retrive data because of error: ${error}.`)\r\n      }\r\n    }\r\n  };\r\n\r\n  postUpdateForm = (title, body) => (\r\n    <form action=\"\">\r\n      {/* <div className=\"form-group\">\r\n        <label className=\"text-muted\">Image</label>\r\n        <input\r\n          onChange={this.handleChange(\"photo\")}\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          className=\"form-control\"\r\n        />\r\n      </div> */}\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Titre</label>\r\n        <input\r\n          onChange={this.handleChange(\"title\")}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={title}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Message</label>\r\n        <textarea\r\n          onChange={this.handleChange(\"body\")}\r\n          type=\"body\"\r\n          className=\"form-control\"\r\n          value={body}\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        onClick={this.submitUpdate}\r\n        className=\"btn btn-raised btn-primary\"\r\n      >\r\n        Envoyer\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  render() {\r\n    const { id, title, body, redirectionProfile, error, loading } = this.state;\r\n    // console.log(\"id inside render: \", id);\r\n    // console.log(\"user._id inside render: \", isLoggedIn().user._id);\r\n    // console.log(\"user inside render: \", isLoggedIn().user);\r\n\r\n    if (redirectionProfile) {\r\n      // console.log(`redirection vers /user/${isLoggedIn().user._id}` );\r\n      <Redirect to={`/user/${isLoggedIn().user._id}`} />;\r\n    }\r\n    return (\r\n      <div>\r\n        {/* {JSON.stringify(this.state)} */}\r\n        <div className=\"card-body\">\r\n          <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n          >\r\n            {error}\r\n          </div>\r\n\r\n          {loading ? (\r\n            <div className=\"jumbotron text-center\">\r\n              <h2>Loading...</h2>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <img\r\n            style={{ height: \"200px\", width: \"auto\" }}\r\n            className=\"img-thumbnail mb-3\"\r\n            src={`${defaultPostPic}`}\r\n            // src={`${process.env.REACT_APP_API_URI}/post/photo/${id}`}\r\n            // onError={(img) => (img.target.src = `${defaultPostPic}`)}\r\n            alt={title}\r\n          />\r\n\r\n          <h3 className=\"card-title mt-3 mb-3\">{title}</h3>\r\n\r\n          {this.postUpdateForm(title, body)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditPost;\r\n"]},"metadata":{},"sourceType":"module"}