{"ast":null,"code":"export const read = async (userId, token) => {\n  let response;\n\n  try {\n    response = await fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n  } catch (error) {\n    return console.error(`Couldn't get response from api because of error: ${error}.`);\n  }\n\n  if (response) {\n    try {\n      return await response.json();\n    } catch (error) {\n      return console.error(`Couldn't send the response.json() because of error: ${error}.`);\n    }\n  } else {\n    return console.error(`Couldn't find any response for some reason...`);\n  }\n};\nexport const listAllUsers = async () => {\n  let response;\n\n  try {\n    response = await fetch(`${process.env.REACT_APP_API_URI}/users`, {\n      method: \"GET\"\n    });\n  } catch (error) {\n    return console.error(`Couldn't get response from api because of error: ${error}.`);\n  }\n\n  if (response) {\n    try {\n      return await response.json();\n    } catch (error) {\n      return console.error(`Couldn't send the response.json() because of error: ${error}.`);\n    }\n  } else {\n    return console.error(`Couldn't find any response for some reason...`);\n  }\n};\nexport const updateUser = async (userId, token, user) => {\n  let response; // console.log(`INSIDE UPDATEUSER: userId: ${userId}, token: ${token}, user: ${user}`);\n\n  try {\n    response = await fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: user\n    });\n  } catch (error) {\n    return console.error(`Couldn't put data to api because of error: ${error}.`);\n  }\n\n  if (response) {\n    try {\n      return await response.json();\n    } catch (error) {\n      return console.error(`Couldn't send the response.json() because of error: ${error}.`);\n    }\n  } else {\n    return console.error(`Couldn't find any response for some reason...`);\n  }\n};\nexport const updateInfo = (user, next) => {\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"jwt\")) {\n      // console.log(`INSIDE SECOND IF INSIDE UPDATEINFO`);\n      let auth = JSON.parse(localStorage.getItem(\"jwt\"));\n      auth.user = user;\n      localStorage.setItem(\"jwt\", JSON.stringify(auth));\n      next();\n    }\n  }\n};\nexport const remove = async (userId, token) => {\n  let response;\n\n  try {\n    response = await fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n  } catch (error) {\n    return console.error(`Couldn't get response from api because of error: ${error}.`);\n  }\n\n  if (response) {\n    try {\n      return await response.json();\n    } catch (error) {\n      return console.error(`Couldn't send the response.json() because of error: ${error}.`);\n    }\n  } else {\n    return console.error(`Couldn't find any response for some reason...`);\n  }\n};","map":{"version":3,"sources":["C:/Users/virtuoworks/Desktop/taverne-des-soiffards/front-end/src/user/apiUser.js"],"names":["read","userId","token","response","fetch","process","env","REACT_APP_API_URI","method","headers","Accept","Authorization","error","console","json","listAllUsers","updateUser","user","body","updateInfo","next","window","localStorage","getItem","auth","JSON","parse","setItem","stringify","remove"],"mappings":"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","sourcesContent":["export const read = async (userId, token) => {\r\n  let response;\r\n  try {\r\n    response = await fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    return console.error(\r\n      `Couldn't get response from api because of error: ${error}.`\r\n    );\r\n  }\r\n  if (response) {\r\n    try {\r\n      return await response.json();\r\n    } catch (error) {\r\n      return console.error(\r\n        `Couldn't send the response.json() because of error: ${error}.`\r\n      );\r\n    }\r\n  } else {\r\n    return console.error(`Couldn't find any response for some reason...`);\r\n  }\r\n};\r\n\r\nexport const listAllUsers = async () => {\r\n  let response;\r\n  try {\r\n    response = await fetch(`${process.env.REACT_APP_API_URI}/users`, {\r\n      method: \"GET\",\r\n    });\r\n  } catch (error) {\r\n    return console.error(\r\n      `Couldn't get response from api because of error: ${error}.`\r\n    );\r\n  }\r\n  if (response) {\r\n    try {\r\n      return await response.json();\r\n    } catch (error) {\r\n      return console.error(\r\n        `Couldn't send the response.json() because of error: ${error}.`\r\n      );\r\n    }\r\n  } else {\r\n    return console.error(`Couldn't find any response for some reason...`);\r\n  }\r\n};\r\n\r\nexport const updateUser = async (userId, token, user) => {\r\n  let response;\r\n  // console.log(`INSIDE UPDATEUSER: userId: ${userId}, token: ${token}, user: ${user}`);\r\n  try {\r\n    response = await fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: user,\r\n    });\r\n  } catch (error) {\r\n    return console.error(\r\n      `Couldn't put data to api because of error: ${error}.`\r\n    );\r\n  }\r\n  if (response) {\r\n    try {\r\n      return await response.json();\r\n    } catch (error) {\r\n      return console.error(\r\n        `Couldn't send the response.json() because of error: ${error}.`\r\n      );\r\n    }\r\n  } else {\r\n    return console.error(`Couldn't find any response for some reason...`);\r\n  }\r\n};\r\n\r\nexport const updateInfo = (user, next) => {\r\n  if (typeof window !== \"undefined\") {\r\n    if (localStorage.getItem(\"jwt\")) {\r\n      // console.log(`INSIDE SECOND IF INSIDE UPDATEINFO`);\r\n      let auth = JSON.parse(localStorage.getItem(\"jwt\"));\r\n      auth.user = user;\r\n      localStorage.setItem(\"jwt\", JSON.stringify(auth));\r\n      next();\r\n    }\r\n  }\r\n};\r\n\r\nexport const remove = async (userId, token) => {\r\n  let response;\r\n  try {\r\n    response = await fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    return console.error(\r\n      `Couldn't get response from api because of error: ${error}.`\r\n    );\r\n  }\r\n  if (response) {\r\n    try {\r\n      return await response.json();\r\n    } catch (error) {\r\n      return console.error(\r\n        `Couldn't send the response.json() because of error: ${error}.`\r\n      );\r\n    }\r\n  } else {\r\n    return console.error(`Couldn't find any response for some reason...`);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}