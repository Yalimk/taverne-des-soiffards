{"ast":null,"code":"export const signup = async newUser => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URI}/signup`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newUser)\n    });\n    return await res.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const signin = async user => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URI}/signin`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    return await res.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const signout = async redirect => {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"jwt\");\n    redirect();\n    let response;\n\n    try {\n      response = await fetch(`${process.env.REACT_APP_API_URI}/signout`, {\n        method: \"GET\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    return response.json({\n      message: \"User disconnected\"\n    });\n  }\n};\nexport const logUserIn = (jwt, redirect) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"jwt\", JSON.stringify(jwt));\n  }\n\n  redirect();\n};\nexport const isLoggedIn = () => {\n  if (typeof window === \"undefined\") {\n    return false;\n  }\n\n  if (localStorage.getItem(\"jwt\")) {\n    return JSON.parse(localStorage.getItem(\"jwt\"));\n  } else {\n    return false;\n  }\n};\nexport const forgotPassword = async email => {\n  console.info(`E-mail retrieved as an argument of forgotPassword in auth/index: ${email}`);\n\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/forgot-password/`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(`The method forgotPassword encountered an error of type: ${error}.`);\n  }\n};\nexport const resetPassword = async resetInfo => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/reset-password/`, {\n      method: \"PUT\",\n      header: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(resetInfo)\n    });\n    return await response.json();\n  } catch (error) {\n    console.error(`The method resetPassword inside auth/index encountered and error of type: ${error}.`);\n  }\n};","map":{"version":3,"sources":["C:/Users/virtuoworks/Desktop/taverne-des-soiffards/front-end/src/auth/index.js"],"names":["signup","newUser","res","fetch","process","env","REACT_APP_API_URI","method","headers","Accept","body","JSON","stringify","json","err","console","log","signin","user","signout","redirect","window","localStorage","removeItem","response","error","message","logUserIn","jwt","setItem","isLoggedIn","getItem","parse","forgotPassword","email","info","resetPassword","resetInfo","header"],"mappings":"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","sourcesContent":["export const signup = async (newUser) => {\r\n  try {\r\n    const res = await fetch(`${process.env.REACT_APP_API_URI}/signup`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(newUser),\r\n    });\r\n    return await res.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const signin = async (user) => {\r\n  try {\r\n    const res = await fetch(`${process.env.REACT_APP_API_URI}/signin`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    });\r\n    return await res.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const signout = async (redirect) => {\r\n  if (typeof window !== \"undefined\") {\r\n    localStorage.removeItem(\"jwt\");\r\n    redirect();\r\n    let response;\r\n    try {\r\n      response = await fetch(`${process.env.REACT_APP_API_URI}/signout`, {\r\n        method: \"GET\",\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return response.json({\r\n      message: \"User disconnected\",\r\n    });\r\n  }\r\n};\r\n\r\nexport const logUserIn = (jwt, redirect) => {\r\n  if (typeof window !== \"undefined\") {\r\n    localStorage.setItem(\"jwt\", JSON.stringify(jwt));\r\n  }\r\n  redirect();\r\n};\r\n\r\nexport const isLoggedIn = () => {\r\n  if (typeof window === \"undefined\") {\r\n    return false;\r\n  }\r\n  if (localStorage.getItem(\"jwt\")) {\r\n    return JSON.parse(localStorage.getItem(\"jwt\"));\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const forgotPassword = async (email) => {\r\n  console.info(\r\n    `E-mail retrieved as an argument of forgotPassword in auth/index: ${email}`\r\n  );\r\n  try {\r\n    const response = await fetch(\r\n      `${process.env.REACT_APP_API_URI}/forgot-password/`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      }\r\n    );\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\r\n      `The method forgotPassword encountered an error of type: ${error}.`\r\n    );\r\n  }\r\n};\r\n\r\nexport const resetPassword = async (resetInfo) => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/reset-password/`, {\r\n      method: \"PUT\",\r\n      header: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(resetInfo)\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`The method resetPassword inside auth/index encountered and error of type: ${error}.`)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}