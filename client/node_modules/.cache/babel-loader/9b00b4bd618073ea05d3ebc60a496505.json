{"ast":null,"code":"export const read = async (userId, token) => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.json();\n  } catch (error) {\n    return console.error(`Couldn't get response from api because of error: ${error}.`);\n  }\n}; // export const usersPerPage = async (page) => {\n//   try {\n//     const response = await fetch(`${process.env.REACT_APP_API_URI}/users/?page=${page}`, {\n//       method: \"GET\",\n//     });\n//     return response.json();\n//   } catch (error) {\n//     return console.error(\n//       `Couldn't get response from api because of error: ${error}.`\n//       );\n//     }\n// };\n\nexport const listAllUsers = async () => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/users`, {\n      method: \"GET\"\n    });\n    return response.json();\n  } catch (error) {\n    return console.error(`Couldn't get response from api because of error: ${error}.`);\n  }\n};\nexport const updateUser = async (userId, token, user) => {\n  console.log(`[front-end/src/user/apiUser.js => updateUser:33] : userId: ${userId}, token: ${token}, user: ${user}`);\n\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: user\n    });\n    return response.json();\n  } catch (error) {\n    return console.error(`Couldn't put data to api because of error: ${error}.`);\n  }\n};\nexport const updateInfo = (user, next) => {\n  console.log(`[front-end/src/user/apiUser.js => updateInfo:53] : user: ${user}`);\n\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"jwt\")) {\n      console.log(`[front-end/src/user/apiUser.js => updateInfo:56] : inside if (localStorage.getItem('jwt'))`);\n      let auth = JSON.parse(localStorage.getItem(\"jwt\"));\n      auth.user = user;\n      localStorage.setItem(\"jwt\", JSON.stringify(auth));\n      next();\n    }\n  }\n};\nexport const searchUser = async pseudo => {\n  console.log(`[front-end/src/user/apiUser.js => searchUser:78] : pseudo: ${pseudo}`);\n\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/user/search/${pseudo}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\"\n      }\n    });\n    return response.json();\n  } catch (error) {\n    return console.error(`[front-end/src/user/apiUser.js => searchUser:90] : error: ${error}.`);\n  }\n};\nexport const remove = async (userId, token) => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.json();\n  } catch (error) {\n    return console.error(`Couldn't get response from api because of error: ${error}.`);\n  }\n};","map":{"version":3,"sources":["C:/Users/virtuoworks/Desktop/taverne-des-soiffards/front-end/src/user/apiUser.js"],"names":["read","userId","token","response","fetch","process","env","REACT_APP_API_URI","method","headers","Accept","Authorization","json","error","console","listAllUsers","updateUser","user","log","body","updateInfo","next","window","localStorage","getItem","auth","JSON","parse","setItem","stringify","searchUser","pseudo","remove"],"mappings":"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","sourcesContent":["export const read = async (userId, token) => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.json();\r\n  } catch (error) {\r\n    return console.error(\r\n      `Couldn't get response from api because of error: ${error}.`\r\n    );\r\n  }\r\n};\r\n\r\n// export const usersPerPage = async (page) => {\r\n//   try {\r\n//     const response = await fetch(`${process.env.REACT_APP_API_URI}/users/?page=${page}`, {\r\n//       method: \"GET\",\r\n//     });\r\n//     return response.json();\r\n//   } catch (error) {\r\n//     return console.error(\r\n//       `Couldn't get response from api because of error: ${error}.`\r\n//       );\r\n//     }\r\n// };\r\n\r\nexport const listAllUsers = async () => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/users`, {\r\n      method: \"GET\",\r\n    });\r\n    return response.json();\r\n  } catch (error) {\r\n    return console.error(\r\n      `Couldn't get response from api because of error: ${error}.`\r\n      );\r\n    }\r\n};\r\n\r\nexport const updateUser = async (userId, token, user) => {\r\n  console.log(`[front-end/src/user/apiUser.js => updateUser:33] : userId: ${userId}, token: ${token}, user: ${user}`);\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: user,\r\n    });\r\n    return response.json();\r\n  } catch (error) {\r\n    return console.error(\r\n      `Couldn't put data to api because of error: ${error}.`\r\n    );\r\n  }\r\n};\r\n\r\nexport const updateInfo = (user, next) => {\r\n  console.log(`[front-end/src/user/apiUser.js => updateInfo:53] : user: ${user}`);\r\n  if (typeof window !== \"undefined\") {\r\n    if (localStorage.getItem(\"jwt\")) {\r\n      console.log(`[front-end/src/user/apiUser.js => updateInfo:56] : inside if (localStorage.getItem('jwt'))`);\r\n      let auth = JSON.parse(localStorage.getItem(\"jwt\"));\r\n      auth.user = user;\r\n      localStorage.setItem(\"jwt\", JSON.stringify(auth));\r\n      next();\r\n    }\r\n  }\r\n};\r\n\r\nexport const searchUser = async (pseudo) => {\r\n  console.log(`[front-end/src/user/apiUser.js => searchUser:78] : pseudo: ${pseudo}`);\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/user/search/${pseudo}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-type\": \"application/json\"\r\n      }\r\n    });\r\n    return response.json();\r\n  } catch (error) {\r\n    return console.error(\r\n      `[front-end/src/user/apiUser.js => searchUser:90] : error: ${error}.`\r\n    );\r\n  }\r\n};\r\n\r\nexport const remove = async (userId, token) => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.json();\r\n  } catch (error) {\r\n    return console.error(\r\n      `Couldn't get response from api because of error: ${error}.`\r\n    );\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}