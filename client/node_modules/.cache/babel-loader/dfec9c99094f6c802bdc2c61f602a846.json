{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\virtuoworks\\\\Desktop\\\\taverne-des-soiffards\\\\front-end\\\\src\\\\user\\\\ResetPassword.jsx\";\n// Native modules import\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\"; // Personal modules import\n\nimport { resetPassword } from \"../auth/index\";\n\nclass ResetPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newPassword: \"\",\n      message: \"\",\n      error: \"\",\n      redirectionHome: false\n    };\n\n    this.resetPassword = e => {\n      e.preventDefault();\n      this.setState({\n        message: \"\",\n        error: \"\"\n      });\n      resetPassword({\n        newPassword: this.state.newPassword,\n        resetPasswordLink: this.props.match.params.resetPasswordToken\n      }).then(data => {\n        if (data.error) {\n          console.log(data.error);\n          this.setState({\n            error: data.error,\n            newPassword: \"\"\n          });\n        } else {\n          console.log(data.message);\n          this.setState({\n            message: data.message,\n            newPassword: \"\"\n          });\n        }\n      });\n    };\n  }\n\n  // resetPassword = async (event) => {\n  //   event.preventDefault();\n  //   this.setState({ message: \"\", error: \"\" });\n  //   try {\n  //     console.info(\n  //       `[front-end/src/user/ResetPassword => resetPassword:21] : newPassword (avant le fetch): ${this.state.newPassword}`\n  //     );\n  //     console.info(\n  //       `[front-end/src/user/ResetPassword => resetPassword:24] : this.props.match.params.resetPasswordToken (avant le fetch): ${this.props.match.params.resetPasswordToken}`\n  //     );\n  //     const data = await resetPassword({\n  //       newPassword: this.state.newPassword,\n  //       resetPasswordLink: this.props.match.params.resetPasswordToken,\n  //     });\n  //     console.log(`[front-end/src/user/ResetPassword => resetPassword:30] : data: ${data}`);\n  //     if (data.error) {\n  //       console.error(\n  //         `[front-end/src/user/ResetPassword => resetPassword:34] : data.error: ${JSON.stringify(data.error)}`\n  //       );\n  //       this.setState({ error: data.error, newPassword: \"\" });\n  //     } else {\n  //       console.info(\n  //         `[front-end/src/user/ResetPassword => resetPassword:39] : data.message: ${JSON.stringify(data.message)}`\n  //       );\n  //       this.setState({ message: data.message, newPassword: \"\" });\n  //     }\n  //   } catch (error) {\n  //     console.error(`Password couldn't be reset because of error: ${error}`);\n  //   }\n  // };\n  render() {\n    const {\n      newPassword,\n      redirectionHome,\n      message,\n      error\n    } = this.state;\n\n    if (redirectionHome) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-5 mb-5\",\n        children: \"Modification du mot de passe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"alert alert-warning\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"alert alert-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mt-5\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            placeholder: \"Choisis ton nouveau mot de passe... et t\\xE2che de le noter cette fois-ci, mille sabords !\",\n            value: newPassword,\n            name: \"newPassword\",\n            onChange: event => this.setState({\n              newPassword: event.target.value,\n              message: \"\",\n              error: \"\"\n            }),\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.resetPassword,\n          className: \"btn btn-raised btn-primary\",\n          children: \"Modifier le mot de passe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["C:/Users/virtuoworks/Desktop/taverne-des-soiffards/front-end/src/user/ResetPassword.jsx"],"names":["React","Component","Redirect","resetPassword","ResetPassword","state","newPassword","message","error","redirectionHome","e","preventDefault","setState","resetPasswordLink","props","match","params","resetPasswordToken","then","data","console","log","render","event","target","value"],"mappings":"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","sourcesContent":["// Native modules import\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n// Personal modules import\r\nimport { resetPassword } from \"../auth/index\";\r\n\r\nclass ResetPassword extends Component {\r\n  state = {\r\n    newPassword: \"\",\r\n    message: \"\",\r\n    error: \"\",\r\n    redirectionHome: false,\r\n  };\r\n\r\n  resetPassword = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ message: \"\", error: \"\" });\r\n\r\n    resetPassword({\r\n      newPassword: this.state.newPassword,\r\n      resetPasswordLink: this.props.match.params.resetPasswordToken,\r\n    }).then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        this.setState({ error: data.error, newPassword: \"\" });\r\n      } else {\r\n        console.log(data.message);\r\n        this.setState({ message: data.message, newPassword: \"\" });\r\n      }\r\n    });\r\n  };\r\n\r\n  // resetPassword = async (event) => {\r\n  //   event.preventDefault();\r\n  //   this.setState({ message: \"\", error: \"\" });\r\n  //   try {\r\n  //     console.info(\r\n  //       `[front-end/src/user/ResetPassword => resetPassword:21] : newPassword (avant le fetch): ${this.state.newPassword}`\r\n  //     );\r\n  //     console.info(\r\n  //       `[front-end/src/user/ResetPassword => resetPassword:24] : this.props.match.params.resetPasswordToken (avant le fetch): ${this.props.match.params.resetPasswordToken}`\r\n  //     );\r\n  //     const data = await resetPassword({\r\n  //       newPassword: this.state.newPassword,\r\n  //       resetPasswordLink: this.props.match.params.resetPasswordToken,\r\n  //     });\r\n  //     console.log(`[front-end/src/user/ResetPassword => resetPassword:30] : data: ${data}`);\r\n  //     if (data.error) {\r\n  //       console.error(\r\n  //         `[front-end/src/user/ResetPassword => resetPassword:34] : data.error: ${JSON.stringify(data.error)}`\r\n  //       );\r\n  //       this.setState({ error: data.error, newPassword: \"\" });\r\n  //     } else {\r\n  //       console.info(\r\n  //         `[front-end/src/user/ResetPassword => resetPassword:39] : data.message: ${JSON.stringify(data.message)}`\r\n  //       );\r\n  //       this.setState({ message: data.message, newPassword: \"\" });\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error(`Password couldn't be reset because of error: ${error}`);\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    const { newPassword, redirectionHome, message, error } = this.state;\r\n    if (redirectionHome) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className=\"container jumbotron\">\r\n        <h2 className=\"mt-5 mb-5\">Modification du mot de passe</h2>\r\n\r\n        {message && <h5 className=\"alert alert-warning\">{message}</h5>}\r\n        {error && <h5 className=\"alert alert-danger\">{error}</h5>}\r\n\r\n        <form>\r\n          <div className=\"form-group mt-5\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Choisis ton nouveau mot de passe... et tâche de le noter cette fois-ci, mille sabords !\"\r\n              value={newPassword}\r\n              name=\"newPassword\"\r\n              onChange={(event) =>\r\n                this.setState({\r\n                  newPassword: event.target.value,\r\n                  message: \"\",\r\n                  error: \"\",\r\n                })\r\n              }\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={this.resetPassword}\r\n            className=\"btn btn-raised btn-primary\"\r\n          >\r\n            Modifier le mot de passe\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPassword;\r\n"]},"metadata":{},"sourceType":"module"}